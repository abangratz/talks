%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: talk.dvi
%%CreationDate: Mon Apr  8 22:19:45 2013
%%Pages: 33
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 594 792
%%DocumentFonts: NimbusSanL-ReguItal NimbusSanL-Regu NimbusMonL-Regu
%%+ CMSY10 NimbusSanL-Bold
%%DocumentPaperSizes: Screen
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips talk.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.04.08:2219
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 647 2012-02-12 15:03:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.12, 2012/02/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
%%%%%%%%%%%%%%%%% tools %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort {
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a
end
} def
%
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 594 2011-10-31 18:13:18Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 622 2012-01-01 15:36:14Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.02, 2012/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 130 2009-08-27 08:55:03Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 [/_objdef{pdfDocEncoding}/type/dict/OBJ pdfmark[{pdfDocEncoding}<</Type/Encoding/Differences[24/breve/caron/circumflex/dotaccent/hungarumlaut/ogonek/ring/tilde
39/quotesingle 96/grave 128/bullet/dagger/daggerdbl/ellipsis/emdash/endash/florin/fraction/guilsinglleft/guilsinglright/minus/perthousand/quotedblbase/quotedblleft/quotedblright/quoteleft/quoteright/quotesinglbase/trademark/fi/fl/Lslash/OE/Scaron/Ydieresis/Zcaron/dotlessi/lslash/oe/scaron/zcaron
164/currency 166/brokenbar 168/dieresis/copyright/ordfeminine 172/logicalnot/.notdef/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
183/periodcentered/cedilla/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters
192/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]>>/PUT
pdfmark[/_objdef{ZaDb}/type/dict/OBJ pdfmark[{ZaDb}<</Type/Font/Subtype/Type1/Name/ZaDb/BaseFont/ZapfDingbats>>/PUT
pdfmark[/_objdef{Helv}/type/dict/OBJ pdfmark[{Helv}<</Type/Font/Subtype/Type1/Name/Helv/BaseFont/Helvetica/Encoding{pdfDocEncoding}>>/PUT
pdfmark[/_objdef{aform}/type/dict/OBJ pdfmark[/_objdef{afields}/type/array/OBJ
pdfmark{[/BBox[0 0 100 100]/_objdef{Check}/BP pdfmark 1 0 0 setrgbcolor/ZapfDingbats
80 selectfont 20 20 moveto(4)show[/EP pdfmark[/BBox[0 0 100 100]/_objdef{Cross}/BP
pdfmark 1 0 0 setrgbcolor/ZapfDingbats 80 selectfont 20 20 moveto(8)show[/EP
pdfmark[/BBox[0 0 250 100]/_objdef{Submit}/BP pdfmark 0.6 setgray 0
0 250 100 rectfill 1 setgray 2 2 moveto 2 98 lineto 248 98 lineto 246
96 lineto 4 96 lineto 4 4 lineto fill 0.34 setgray 248 98 moveto 248
2 lineto 2 2 lineto 4 4 lineto 246 4 lineto 246 96 lineto fill/Helvetica
76 selectfont 0 setgray 8 22.5 moveto(Submit)show[/EP pdfmark[/BBox[0
0 250 100]/_objdef{SubmitP}/BP pdfmark 0.6 setgray 0 0 250 100 rectfill
0.34 setgray 2 2 moveto 2 98 lineto 248 98 lineto 246 96 lineto 4 96
lineto 4 4 lineto fill 1 setgray 248 98 moveto 248 2 lineto 2 2 lineto
4 4 lineto 246 4 lineto 246 96 lineto fill/Helvetica 76 selectfont
0 setgray 10 20.5 moveto(Submit)show[/EP pdfmark} ?pdfmark[{aform}<</Fields{afields}/DR<</Font<</ZaDb{ZaDb}/Helv{Helv}>>>>/DA(/Helv 10 Tf 0 g)/CO{corder}/NeedAppearances
true>>/PUT pdfmark[{Catalog}<</AcroForm{aform}>>/PUT pdfmark[/_objdef{corder}/type/array/OBJ
pdfmark

/landplus90 true store

%%BeginPaperSize: letter 
letter
%%EndPaperSize

 /landplus90 true store
 
@fedspecial end
%%BeginFont: NimbusMonL-Regu
%!PS-AdobeFont-1.0: NimbusMonL-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Mono L Regular) readonly def
/FamilyName (Nimbus Mono L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusMonL-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-12 -237 650 811} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B89290699B50C1BF1BAEFFE
1F57BE7B5EA025241A248A6D4CFA5067A1DA6EBA4CFC940599BA3F3C934D7248
B8E4AC5816F0D2CE8B3C4193CE39D19FFFDB75254573173CB51CCD83C2F2D06B
2483CF9B07B21EC6F502F028C273887BB06DAE2AFAC10E9FD3C7CF51BCA7B277
B706E425302DC78975AC0E43B87073257A5CD7424B6865FCA89D886E8F95C4F6
D457623DBBC0D16BAFEB4C649F5D72B09B18502EEAB687E915E9B536A361B4F1
44C3CD4CC683B5F05A4ECB4823A5EB5179BB7EEE8B76C21B2491A97808F6318B
585B0BAD98F42FB4A755BCB74CD354F794C8BEA5B90FB9681BD5849D45247E39
930C882490230E1662D39CCA875BFFEAC3E79A78DE6E1298ABE9817AE98675C4
16220AD0D3A36580EE2F2A17AAA1246C416D58A4C52FBB26AAF3B6F75833AF8E
3AA996218DAFA571FBC7CAD90ECE9C883C813D8F168C5E86BBFA0F0A5CB36E35
2DE4CAA0F8D3227F72C5056BFB5BCA6BF9C60E037A0E44670A8D3CBC9A19F379
CA8DB30B711F518A8C7569211AC70C46EED2AF62A37F238BD0BD12D60332E673
C6E784B3EBA3F2E71E9993B97E8A38F85048937E958F1CD8FC6E661048546135
56B810FA1FF611B96495081C04542DF7FEF085DEC619DC8C84CC57683D212813
9D14728AA32723E1D15F2AF8F03422CFAC4665480540100946B67E620200B177
624A9E46C0D94B3911FF21631A974D502007D6D1526CE47CF745E42FF73137E8
B35068104B041A57A707B16BC4CF8A1580CC9FAC282FD9DC361A0FFF2CC6493F
A4738852CC6A4B2E4116C51D7D25524B08C70599D58E1B8D78EC12E8AA488CC1
258BE5BB7602483A349A349D0B05C08392CE8635455C730ADCBACC2CBFC7D282
232A258F023C1E0DED318F77A38AAEBB582B38A4D7536DED024E39E636A51F68
F04A6C311D3CE4B912E88642B3FBC57C841FDB613B2FE215AA66D27EE59AE0CE
C5E381F5CDBDE5591B505B5040BFC33BC4944CE1FC57B2D916569675E185177E
E7DE0DF4D6E2FEBBE17592B920EEF8198340283FEE7FE3A07D39EA2D1B94DAEE
18FD20F24BBFB3A2C968EF269DA287155E6780C7B2C82C0672CD9899B12E15AF
03999EFCA683A83C9AD337F4726906EB3D588F93D21AA67354B956C3ECBA3C55
439ECAC3970EEB60623E28BDAD988E5147C913B2E2A96821ABD9CC0AEA3839C6
D88948D2849734E5F9DD5CB5BFEA5D7E820D14BB23740073D2F18F5E535CF1F0
D0D082C889B4F6866D4BA35FC77F7364BB75AE2083C7C66E6C13CF17915E7CB3
72BC89FD256DF863D636D256FEAE0268BBFB891BEFC69766224D83461F0530CE
E3B17B32722B35CA683C3222A6031E68910DA373B32837B34FFDC5B57D7EE98C
FA10A67EC1382813E02E7D39EBA812C50D0BA5D3166C98F15B037AC77EB701A6
95533447DF8C31887D6A42FA7AF1CD28488C1F506B7E4CD8065B0F9C6D7A6CE3
7351E2004F4BA2554BEFDC96EA86D632EE114C58E6471FC04A20CDF0E31D57A5
78D45405EBCA47782194D0FA7B8EA362D6D04C2EF1070EC9528F0B9021B51423
FEFF507A5E1E5474EA945A584D83D14435B75FC15E65E676AEC9788DBEBA4CF0
64EB89A436A5FCE01E7AC70C59520201D573B042D4DC9A79F7E28D634164FC76
A6F314415BACF4B1551C8569B1CDD26689FC172BF874010F21FEAF796FAA16B3
25E1A383D25D686D54CBF2294917FEC4BAA8802AA15097CBD3AE8040DCDB2E63
BCCE12B4EA70A67A6BBE9A02D18CA44689E5DB6F5F6BE5EA553056C0CB82EC68
81F14DC02D33CD603F4FFBC08DA48AC35DD10A8785399B52E9175D4BB438DCDD
A7F97F3CD1FF767B2B4900B52D9F1A26CFC8F408748780F55B047AEC90F4D1E0
692A5446937351B04C1BCFFF50ABC13743DFFDEDAAACB97569A8E15F1C6BF255
FDC8CBBD2C18E177C43EA48C65BF899EE7154A132800ABC7ED728A736D032C5C
1D499A9EB93CA71FC9C0D3222E949E21E2523951454FE7AFA29CDDEF96E951AA
A9B8EEB3F9B7A2BBBC43CB3CF9AB70F0401597C8B222092502FED10FA8E30313
5E00AE343882AD0796D5CCBAA6F264F12D2BD1C6BDB9FE7824823E37DE05592B
CE6FD4F9FD1B8480F46CF529D8F9233B220900154BFE946C91849600361FB21D
D1C33C9318198414B088DDCB10080AED25BE326E17259B2C2F01F3FE16DE5E1F
B6F564AA1F7A4B56B130863434670C73D1799E8C1EA327F5E48E1F44FFFF59FC
DCB8889FDE36BE8F15463B47C440C4DF27E5A47692A30A765B79B3470940A6DF
D0667DC4D650723ED253321313928981B25744F0367D60D2B8343E242AC248D6
409E117D682ECA88A610879E3FAAF5AA83C3A0EE4E56F815BA31B93D08F78FC8
85AB49D0111CF2C2FEA07065A54C05A25EB7D0738D30A255807DC924DCD938A2
8323650F42A4BA7D520782B96EA6F76D6A50BA02D2C66AC5BF7D425B05D7FAF1
EB155EF543000CF4C3B5F33DD2DA1FDE353E0E6B813E574B08EE2519B09B49B3
ACC03D654D7AAA3C6A481246850AA8E217EFF0D65A17DBB733AAD8CEF6A8D682
650D2233D62AEA82D51BF96691DA4DA7A1E465B1D1EF82AB68430AD2BD3F41E5
E92C35287BD1CB02CBD484E960019AB0BE98BC06C804087EFA151A186E882E06
489831F49069223D295F577F4DFBA69D284583716CCFC958DC0863F7C2FA6834
18438AB25B067BF7856BA44AEFE84130BD4D15BB2EC8597057E4EDEBCE7EE23A
CC3053926BF4350D36D28E2E8B90CF14F0639A7E74C0BF359F4827067C0C258D
32F3A703938403CD0EE8C7AAA21B870398665A53B912EA2C1B0D9C8DE315E405
2A9D64B50B488945EE7D39347EAA6B23D4476E1745FD4DE5000FE419755D7809
9851C06894A6E5EFA5D3545A2251B37937F9DF00DB0A32C4B2B483D222394299
B21381373BD81C7BE7B96E629F1479136649CDD68DB6EDC996DCCADD7A765CA7
4F8508096179D69879F4D65DBB3AE8F4CAFEAF6BA8B90A7098C1E51F89D38312
76BB7BE87E0932B17577770C79A8EF9AFDC71BF994BC1D8766A4FEFD11336E94
64742FB50998115B9E8871441EDA83014D7534D8C47DB07BDFEC8F14D6ED8F70
DDE70321FB7F3142FF6442DD52B19607DE62573169B9884A1CABC184FE6295F5
C12E6F27914E89BD2449E8AA906A4C2863912D25E4CB534CF9F5DCB4A58AC638
59E9B1A98FBD975ECA34568BDCAF452250AE57E1FCB041EC4C510CB5EA83B0CD
ED130ACE822E852498754FD4A3200AF82B7B2CC2AE3441DA9D82F0D0DF451FD2
462A865D7D45125FF95EF2BBBCA91BD5350FC7C1B83AEA99E6064DCF24EEDD27
D40DC0A0521D8CE39E560F930958B9497706044BD0556B4E643712D591988856
8DE41A114CC4D3426486B761864FF0FB7724155EE3A67C4317A07FE23F6BF4DB
1217F996531D8C8F1D3F921759666463C799AE090C2E12A901271FEB81CE97DF
06830FC4E8BC08C0D08C54D7A6B135B4186D059E1579A62B5E34F9F6043090EB
33713CB4B56EEBF4A6BFF4A6D1DDD77D61CD566D4A615D2CE6329165A37CDEF3
C75D3469EACB167C30F7241C7AEBB1540CBF4836A3EDE9FDB766C581569E4B6B
4179147AD227787AF4BE253AABF7FBAEB3FF43C654B07BDEBE7188E233047E8C
CAE8573D59368E7406B167316A0AD66441E39E3F09C6FEB83C2313E847FA26CC
70716265405578AF2F97B1037DBDD124C3FA744AFA1D9C416D2CF0A44121956E
406266A0EE20A50D956A6E5E955DDE2A79B3D89DEB4F729D84CFD675259F1D87
E716A373CFA6AD3AE0AC02233D867586B074715DCE17AF31652D3D1C1032063D
00D54FECF252E4A2BB47E5B5D1729712ED522D98A140D84889ABC4CD05EE5591
4BE96407368A9C47BD395228BA1C11330DFEEB0DD8B306E7A35BF6581D93BB22
5684B50FC56691BB3A1D226C2E079D2B23DD184A0643CF7397EC2FD1A3676A2E
5FA084CAAB8D802B28E97E3B1E097CB13153378D85500BB10F924BA39F685F1F
909AEB884D2EF1C1A26D872DA96F09533926A68AB98C49A0CA92A57984D00F03
98601266B45A589AACE5807F35454E4AF461F231F30F683859DA1FCE4C085DD3
0A515907938593C0351EED77ADDB3DCA9A4CEEDEE5840B645FE1AB660EE58B55
DA8BE2B87BDDCCACFF62C06EAE157D4EE2F87BDD1B8BEFDE13882DF23070BEE9
AEC2B41D8D1A84EC04FD8731BA938A4163D000A5AAA7EEF2D2CBFFA77D888272
36660260C19CA8BAEEC748C19C4B2B1B0E82CE1FD1EBCD359E3B2C31790550F0
DA4C008BA19D607C56649153A7B9691BB3406829CBC9CB35BC027D7137EC3D8C
5A8994EA3E05399E34298428F2156BA2336DD6C8BAEBC5944E5FF4A40B59920C
ED185E281EC26AEF5E64764FA5AA57FE34A64624AF448CE03C9FB9DF1DBC6D15
723A164505FDA78CA6F91CC5F421DB7807C5DB8705503F3EDAE100E923A041E5
8D8F7C27EE92923480A239685716F6A646D2CFFCAAB29CCA2414C2B1A5FE2FB3
9619860EA3A268C57A3689F66F0216EC699483929418AB684A92B4187DBA74B6
26F82379048B119DB35C1CA40B9417A1DB1BC9CFD7A726E5853FD36CEEF793BE
D678FFE181B94938810CBB5B168B9B471F1E958A6F1BB73771F35000FB9EA55A
132F9B151BEB0E2BAC23C2866945E46981F9406B6E4F61160966AC98F2428687
8404BE7530ED3C8315317D8939F322E080EDE010879FFD467D90470AA749FA5E
70A1142AFE731360E35AD600F32DAE8C8DB58BE3AC8B7B58A38FF7FD9A0A7B86
5584BFEEB4D4C73685586E051F08F7323399355482094C3D0BCB8A59B0D52105
FAB1898EF2554FD8F27C4A3FF0D14A8605DF1799296CD32FF4B9B30B38B54B0D
6444AFF9AA7F77EBEEF004BFBB8F6F9C08B63E2ABF73FB2F39278CFE48B00994
BFB48F1F389AED760F5FDC77C2BD8DC0F22573E629D8AFA410B530332A004B9D
8774391A827418996B7FC5E6917979DE5A05EBD5517DA8135A25D265C21FEF30
A073E9E2AC4EF3DD41D58683F8195D3781E1DC28388633C5A9609CB61922A5E7
D9647A7DDB30AAB43C21E4D5A804EF9BFFB41B98C1DE7922B661D60D13D03616
B06B4A4BD034E3FD64DE168AA57C32E41FCF507E742CE254F19EC5974E998264
6D145FCBC3309933A1310FD71115A0B725EDE8632FCB86E990AD1C8A0331513E
0B6F2A90442F61F40A96C971445D731DF9B83A7A1136A9CE874779462AACEB6B
C063554059E8F56AF93A249D45A24617FA6E14E743E084E7BFB0E3068B9C7D04
90472C3FE34D38C73E02B5065DDE064D64B07C5041BDB97BAB80164366D8B8F9
041C564626D94B23D6B63755279D4381EF6BA65DC75524C7EB2FB795566C7E79
0F22CFA00AA4838391D7BA0AA3D35B278235FFF9A707E8DA83481B958F1A6B52
D6FF2F1F28DE13E4B525245B8299819616402A6AAC857254CB4052E719F3F08F
C9D727901A2B0F018CA61E48EFCDA4132D4899C7CE20D71648961D1B7997302B
451F10650B9C1473622C63244257B7E916C87C5C61B1A2CE0A7679A9F255C664
0ABCA77B2C393B778B7611053D31BBC4670C6FFE45FF2523E1BEA8C55A40ED03
F0D4CF61478B747D9380F301B65188BDC856481E39ECD39E1A356E76C575AC2F
2739F6074B0FEA552659822AD4EA6A9102391FE0D4F050660F516E85A314FB16
1563ABB27AB6E746A73FD0BA11101E7A9FC1037E692CCF35FEAC85CA99B43BDA
C15C02830AFE2DC67515D7F72C2F4A48AB8FA2A309583482A9FE1FAA8B29052C
068A84831B24CE465AEC0DF328819BB15AC54A63D2CC1DDFF014769AC5E1D0F5
646D44D381720272C9B2F3E2C37ACF3B95102423FC4B927E16F3C229674D0F63
DCCFD3D9B0BD93DC13B78CEE8C67EB467C876417B4E3AB988FFBBA9B64E0A2CD
60D97715676750BA3BF562260792EC1857BCC050B841774BC20AA57D7DB47E29
39220D351CE817EEEAE1E7C9349C2F0CB67D0CD9C721BB33CCD8A80CF0B4EB92
4337B6064B21E3E98734A0CA4A81CD5D8C012E9FA3694D6DE3ECAE9DA0F3B5F8
1BA6B221FAB4F7D24104B6CCEC832D418F137118FAB8F455021E514A88278A89
B19EBCCDED7717DCF1991BCFAAD08CFB74FD5477A8561FC3B716A8DFFBD75755
433E8A2E729ABEB38332A6A970B689A7AB34B3E48898FB9ABD448FDFA6E376B9
D93F5B398266B62B1AA414E5ABDA149E08E55F682FE4EF791FB8B6AF3372E45E
4A7AD3B4C8E55D9DC3BD4DAD22E64084BA683AFFDA6F8CA476DB5D78FA4450AC
8A674D08FEC96FB122F621F05D09DC09D146C345A8B2C4354C033A4C76B65F47
409E24B06A854E32C24392E5BB799235C4813B4F7C133E259E1F9B2ACC95F901
CD7DA38FAA447B31A65DB3DE4599153CBC6B492E07E4DB88EC03A7608CE77EF1
E843C3B7E3CDCDF9A2F062A4BA881C2746ED34A6F9D7BBAD52E735B25892F6F6
B68F3B1F7AA8EF491F9AD491BA5E7D65FB18BCDB44F6F6A54CA5BDA68AD2A5C2
FC0A3EB7CE4F6F38CC0CD9BDE1FD41BF7497ED320603ECFEA2D86002B0EC3723
843605373A81CFF18754B746939361AB1B13B523DFBB29AD7016C5C581E498C0
CE0025AEDE0CE988491CA6937C1D388B5A56C9FF8C4D4EC2F469549C5E2F6230
3BFE8A4FBCE69C04FF94C5059BACE0C307CE51FFD68FACFB81BFEB63CEC385C3
8EC70DFAF717211AC598B5DE05E14EA46737C2A61A3B8FA8DEB570B54C1837C1
D2FBBEEB4C382BA3FBAB71B042010173F042DBBB30D6424C17BB0AC75AE474F7
097C3A735764CEFE78EFC1A195EC13A8FA420507B2814046F5F2E2EB2A44EBE0
EECB15A3C82C11A247582DF0AF15731480802A1517D9C6FDA3D907107694C465
E2F6D81A775EF6DF69D58578B215A963F5C52D520E534975D17D8E0A1227CC52
EF9C740180BAA71042DA3E09A2E5B8C67279547F884B2E716A424C1589EE02E2
77C150EBCC74E8EA1F39F8CC876E61506E7370642A6F2F09EC414A2ACF5A318E
5F96B084D3825A3DBAB4AD1CB66905FB0A4754575D5615FC6A5A1E0542652689
FDEEE6D3B2B39AD514A8A22DA0F4B20A079768CEFDF22A7BD1733308A5E934C7
3E1778D3C66D50DEFEDC322FD385604C3B76C8D65486384A4E6F90C0313FC09C
2F4991EDD9FDFDB76A9F085962FBED3CD2E3D3B333444BEAF07554BCE0AD72E1
76552EEE18CC4C9BF06CF72B5D3FD84E73724E83DEF81AE59E4BA175D065D826
D0748FD49CAC25C506F7B083DDE876B25F9FA8158DC57B2EC2AF8CF896608C5A
B65BB244420F217AF5A19A6B2412B507000348F2EF9AB25475D1D9B4151148C7
0D6049CC3546BE4329B97EF8ED3EFCBEBC99CE983EA462DBC21D213A6EE2A0BF
811CC4B5CC42F926DD71C9A46997703B03E250E64C24A95C93C28331F4C5D109
0E240AEF7EB5CA104AB72279B090B1943404E93E993857B6B20A947FC1107DF6
3C08D5CA62FAD8819D4F40C9BDA3395B9FCF93583507E951286B1DEB7FCD0566
2D6B7DE9015BCD7E0503A52149BC1B5BCA029DAE725ECA1AA1F4E87F1F184F23
B65CA2EA1FD79AE185373C81736E419ECC76906718A14F85ACCE755C8DFBD672
AFEBB34CF49A34E3AF49F59A12F3A9B76CA1AA2FC2009953C150CF93A1DDEBE2
38FF7F45F5AEC926B09A553037329220939F095E15CBC1EAD1A34D51A0F8828D
8EAEA371B504D44EBCA0627D7B4F8A28E2F36F73ACFFB72A98A1686697C6B7CD
50A1C5785E44352D5F3E64D4428191CF99F2341A6B339B68A2AE149DB90882E7
5C05A959C34ADF2D9D2AB59F10250663967A7B928A9FE1C9AC834D57F69EAF29
764B5A09865C2D36FFEF17DC84D8B79ACCFACA1D5DCBBCFA9BC49EC3D760EE2A
4C65256BD7356AD7CA4ED8FC19E72EFC77F7D31F33EC38AFB743CF6A9E7B0C5B
6A89875718FAC168E4E097E86ED3A7A0E86C8EB19DA903FE24988EBA6FC48DFA
18DB6BDCB420CBE08D7F586D94041DE14B3ADA530CB55E8A6DDB25626BB2CB63
57B72ECD6B68785B2C9568E570A81A36C1D8D31C86B49F66CCB4EEC3E1642ED9
2C77053D8B0A197A853688E3AAC1B7ECAFD42789BC3D00A0B3C8DB6F79972E11
724C5EBE52420F74D9BDFE3AE72692FB129961AD51E86924D5F9EC77678C10FA
F60A0B3AB5644946C17C56B53119EAA8682FF4779BE92DED332FBD7ED82DC3EA
C350617C424190CD9D3CF76A936D88793239664D84F4CAA51CFBB3A9B62A7730
6FFED0FE21DB2B814A8C332C88E3F3F7DE4705AF4F540F40132ADDE131378A8C
51C139D72BABE79BD4B171934F0597C65122CDFEF61EC6364AB828C479D9FCC4
908E647DB2339D25BD05851478DE18407AB99EEF38F190D814AEE8CC1E1B4136
7CB77577A4F2CA9A248529D6DC846FCA15CD098A1B06613AC993ADF5BD456DFD
0334F5140D0CD1D0C11221AA246B1496192E0E2AC39A160EC8C9959C842389EC
2676477930039B98FEAA9F00AA3A998A083EB72A76356D2E02D65D54DEE6D03E
C1AD2A40B1712F129F6E7BA5DF0E28C3DC3C4B59BA3B367C57D89A691D2FD404
DC745FE575855D6BF4F10FB8856547B3BA1E65F0575819E32C0A80FB0954F4E2
A55869B94C73C6290B597EB88EF9C8C3BF92FC5D177829EBD62B4C709A000619
EF4932FD881A5374A5E2572BCEE6F0B4512E73B3030AF5515B7B8923C2F85705
FE9661F5FC49CF15C1A703432AEFA3AFEA8EAF40DBFAF45F18074BA189262246
F1A0C30AFFAAD49E57570C1A559E102378389A5FD5CCF59E4C2D48B63996B868
2E822D642CB85AA91D54A21F1CE104AD7AFDBFE34FF6CD0B43C3D0D1485A8173
CE5B3AD494A8471D986ACA69714EE283001F9134463796F7BA5EB4A7A715A034
AAF603EA3ECA3F7F0C32E2BBA391A78868DAF1B833FCD65BCD0CE9EC172E93BD
CD29C321F5D6A82C3B0AF2ACF1CE9BC5474049A693CBEB58DB49DBCE6D4C0229
CBD390BBEAD4473ADDBCA71EFE1D056CE49B6169E56561F3BD37C5A62A64EE9D
97BA59EDA59A9DD22D8FCD06A4FF15E1E2BA83521DEF872F23FCB6B263BA380B
74DCE29E07C720C231E737250C228B4EAC4A163E0B72873B3E51CD22E7759454
9E589087295922AEF8FE095F72989DFE30FC3F11D3578EE10F178734522F89E6
B7EACE42402814C53C29C3EC3F7736550404A4A0EF3803FDBD23CF58F40A9F9A
EFC3033B88B33AC6E01AE993F4F15C83FCE370D1291B0CDD078B2B3129F15B09
F08AB45273CDCE50516A5771FE2F3C5041EB3D9A710467952474913A846FACC1
58302DB580277A6D0C1C209B7133EABAD289B80F7E695FC2D14B7ECE2AEC96DB
EAAE5DA4A27BFF04DE449DED343101ABA80198B9F34D2288FB7C8F954EE12BF1
9BF3A193F4D7A2B12EF373F3E8544917DBB2B9772213D0BB20F46E3018458AAD
A2CCF17906680255F9C6B9C3E39FA7B3888B1DA4BB2E1AC7E7711B1939990E43
B0C3A3C6139D58E9D69D9DCAF5837330B8933B54AC4C09372E9A933EA5071152
823274A65584ED0C82A064EAF2F08447EFA5B5D6BCCE9528CCDFF8682B182FE2
035F15CE5037858261A9E258F3A957E8EF03EC42A5DFFEB881367F3A8050EA2F
1A16A2E474232FEAFA6A0414B097797C2536036F0ACA7AEB2F6B361E7A42E3B4
AB1D73BF0829E4C839C074CF78700AD0C7781D6583800C735A930A915C767B00
FE75B425BB5F69FCD1255D0EBCA20D0D39812FD7C65EBE1D5BC14661ECB894F0
10A14C790915DCE503A8EED35AC9B06B8788E682F0E147308362979F4CD9473A
F6272029AA2AA2C2EA54482A16637B780350EF4081926C46E11ABE71D97135EC
F138B5280D3160720994E92DF9544B72B2AE61E0BA95849E28D60F39B6A3818F
92A00F57D41DFA162A4DD9C9F135F272C5E80621E49487F304500201A506926F
CF389A3E9DDF533FB7D592E28A4431E1C30A523DCB49AD1E302A8CF17B7BB37C
48B7CC485903F6B831FAE7B309B377E7BCF3CDEB8974B328F0651F75035F99E0
2302597BFF0F12D75FC13ADFDCC20945B62164B6B84CBB4A1D9D58F9C26C5EB5
02DBF909995C8503A6BCEE71DCCF22CB81B790B3BE5B80D74271A8E6D1D03ACD
2FADCF10E8F7469A9E4F60CA8D75878FE43CADED17A7B21C884D39C4B8593527
D0C36E69B32230D2A78BF814AE54D6E0B6EB6A57B74EE33E300C4D4407D31CF8
C055EACB3F08231102E217DCC7FB73FBD0E52BBA17469780CDCD4B8A148BE152
DA71B6B58FCD382A47F433191BD98E8B9FA62A7BC56E54D6E5E97CF238277FFD
4E5A5B76E54299900DEDC2CAA064D430FCF9F9BA94F8EF53A287ACACF80203A2
67336B06A1F72F4ABA1AEF4120C11F057C0AB25D9C775DE00F37F9B0438D81F7
38AC25544B99CC3DB76451646E2C2C9C89040F6113F40F441C2BD84726DE1BEB
206DE318A4644348F20D672924AAA75834BEBB4632F4D7E71CB0255B2857A1A2
DF3BAFC6F113BDC600A6FA40FCC21D880E3767D8880357E5017147E5372F54B7
64A8DEC931734B60F6343B92F1B67E0B8B99DCD7EBB4E08F06C6C89D5A654B57
FD48914E72FC476A3D4019D08C25E598B731C9A03F3A4EB501F760EF762B1505
102220A5E81307570C3C28B45B30772EE9FFBB8D00718C343010FAFF4C5AB8E0
E6CFE66CE1B4C401B6E1BF9E9308107E3B15180026246CEF4CF5245911C2DC02
A05A12865BBD9A102A214DF91C9B3CCA3AE3F31C1198BF3F62049435BBF01717
C08D389275D701D5A0B2E94E7984D00F03986016A1A75B551ED33D19A1FBA979
FF7BAB06B1AB21AC0516E83975669B41759DF26FC036EB5DF267133BAD6D6F8A
9B285685F1500FE9A95034D47818B8235920A92F4F2CFF2F1E523BCB1AE8B9A3
1FAC398FB4643E2AA1E3A0E18A10A060C09502E182EAB0E7D0D01ABC1E310F7D
2A2BC402136037D124481DF8E5CA7D5F3F84929BA4716C5341B55135CB4CF534
2B479A4651B750CFB6895D37B2DCEDA7F3945126847769D6DD09260A3BE0633C
33C8E482368140CB22053890DA674E5DED33A77E6558BCBF35272B5106D20F80
1D02ED63B52C20E5924D924B8ECDCACE526D092F2895ACAB454C6CB74F0B3FB6
D1D6D2BC3EAA1417F96BA067EE5027A4BFCDF875CF535F2FB48403C6329EEF0E
B082DF83FDE3D2C8D026C8F88413B74A66B44F624DB026F3430994C048EAC96C
ED0E36E8DDCCB3E8FDB4800850417475145717BB23B43458474D510EE4FDC7A7
6B110226E22D88EFAC01B71A4555F34F8023B15E73E8856BC41B40ABFB7CE655
289E4051AB36D4641F7632E4F65773907391659CF35B170D15BEBE2CF823B1E1
78D16C6D2C4717C7EC8DCE3A7E6BADB9D37B5F005F4B13EC257CAE5B8DFD9CFB
B246A971A093580A53B622CB20E0E69C01DFD1E50FF5878493627E624FB7F50E
79B62C4F6DE1A96B074853E210DE92F71E5D5BBDE5F3D844C43C18A8B3B1880A
342C9AC88536140CE83AF772E98E0CD9191A0E89C51BC4A3A6FF826FCBB85247
2D8E6235227D5C3994B4B711A982488691EF21286FD1A9C4B02A2CF6A714DC55
C703E9AB03C1B531E961C004960E6059F6BE261B8E07916A27D8661F4EB711DD
CF5EDDDDDE541327EB7CEE70A3690DA1249F3175E65964F82596B7A7153F4FF5
C4C6336DB6113FC9ABD6241D2D9C19FE8852D23006A752F86D5A8B2F0EB6E6CA
E37BC5000A7795E59B1399393E3013B87930A6D5C0E6097EBD9A352191A4398F
807B63BE83C8E4116C297D8904B720391C8EF7D9F110CEE18C59466755D6DBE6
24E72E3AD8F4E26470BBFB4018CCAE03837D478D1C0858DA53F75F1F875F2548
D33D04F6ACE30051D6E7D6FAECC6384D665380D35C32B93E19E8A2DED1A9D574
718B9BB933012C7C6F9F7BB862DE95572B010AFE7CE4412C63E04A148A32BBB0
6F0DA7BDECA4F73DB7754BE25DB740A8362813974AAA5BCA94DFD95BF8D4008F
42DF31667810CEF6F7111078FA69F2C0B6156BA12F60EA605290CCF3B248FD9F
1A9B753C5AAD9DC341467C22F8F203D856E07CF0A0966ECF940156D5CC137118
AF31C8D553FFC1556A37F78616D06898DD9D32CF139FDAEB66B5C3C25D11BA7A
EAA55B86F597D8187360DDC9B9787ECB77790D77540367C0864304A45BCDFED5
313BD03C01192DD893269DA7CD532B24520E22838A0742F4273E4DC1E0F3236A
1199504D7AFD6115FDC1AF030AA31179E79C38FDB10CF8F6677DCA7F1C9590E2
A40B3BC8262A10F51321E33C4C8EA397CD00B1F7DFB55C3052048B9E319467F5
764ABCCBDC0FE5125D5E0DE54FA4E676DDBC3EAA1417F96BA0D6F07A0E620112
6ABD840E7465739F1FAD283E88B42EDFFDA30485C8416E819D00DEDB2BCC5940
F2866D3521414E8BDA468A36DDAA91A581797D7DFDC60C64D1836155FCFE957D
6CD8D3F1ED75A9923E143E67F1911FB7E660A07BA1C2BA93EA1E8E453B19BBE3
EEA82AF2DDF0CEA65FDEF0CEEAFE470C42C14873530A005523AE74B9CDEFB6CF
542892BCF8EAEE4BB5AC0188FCDF7D68611B0695657639AD3208150280880BC2
3ADD26D8FCEFD2A66953598E452C0B8893CDCF0C650D6D035A52055EA7A9EB0B
B4F2C8AE029B2D5BBC5B6377A909AFF1482170C615EF12F4BFEAD897EF9321E5
32C6604C059C27AFA840E9ECEBBD7C2F51E4C7FCC3DA1B5F9B5AE3A7B518A914
C9268F69E9A48DA14234D5860585D91A9F17902D66EE63A5051DC706F46513DE
E3289D3415BF1E02A8CBCBE17FA18CC7BFBEC4D71EC88467064EA3C98AE5A7F8
DBCE6E8295EC486285906F8E2670295E43A19B8F6E7474CCC42B98E88B7DE964
DA6A97297A6C7B614982CC3CF4D1CF7FC49A0CFFB35E4E2A6E3182C25325E76C
255966E3C65BB213883F595809994E5BCC2AD0132515E73DEEC9C2D25602DDD0
C29C92C321A0809509D021E0BBD3920CAA3FDFDA36E567AEE78DAA18C13A37C1
13894C986A55F10028E776AC80B7722E69057DB2328BBE3D86E650146B6A6F76
E2A4B79D31AA265A43FFAE0648E80F16DDA181A8BA6C9A37338DBA66D96ECF40
DD4F17D6BC8F42C7A21980F064B0C5A6240B6C30EC0D69055A3320172DC62758
702455D0A34A6F0BF77931D878654827CA67C1ECE5498D405EF270A816607FC8
9FD5A896A6F265ACC81852B3F31A630DA426838040EEA3A07BF210C8782DB3F4
49CE6C1456F613ED19E8A66CC2D858D76D0E069AA02B6836AC76C03F15125335
193F52A98879CA3F4F4A12C3BA0A6F2A01D8B567783A0E6634982BEEB0DC603F
21A288723C27A6226C375C3CB333F9F5EC6A7370F1946BDCBB14E85DF4D337E6
81FED96A449A3907EC7C9DC79CAB8E7B1E3996D62CA2F4640259A77826E04E0F
1E0AD668F777746691000B7B81E6D718248AA3FA53B8E82C2A0E609418ED349D
E5A3E58BB5F6A7ECBD79CF8F99A90B43CB8C15474B6C9A2E92C0A189DB86E57C
162A36D2D099A46CB99223BFFC63A514AF6B5EEE6BB02BC8666A2A87C3047755
BCA35028D709FC360F4B70C92B0F476FE1E4515B63D30AA9E1D0BB09BF9849B6
4D79313E1777B6EE59A9488AABD7FE606F6D296D56959E12F17D6FBDDEA3363C
673287BFC3CBEC50D926B626A664E9A850FABB5C412CE803F4523BF2BC26EC80
C38A6FB5669A59E450EFBA1106129701CBB30CE7FD1CAB99868A4C2738BD80FB
78E0C42421F4A8A76B74DA7553B116543A9E23959C9B15AE6D5EE3CB35E199B2
DB4E756FCFA7859EC345C76A3FBECA9D4C33B96B4261E72968945445C012E4A2
EEE786017C233C0C016D6C61B4E53AABD7EB01593C62FBA0B098A756AFB05D95
894165D015CA995AA6D59A03B2E2EE66F74355AF69CEC57F7C00D39011BBDF04
9B565649CE6AB00FF1C02036DFC4D3C47C2203DB6F338845854E7DF7FB450CAB
0D4F7CCDBCDDF2CC225D278FCE4ADFAC79179749A9047ACE76D05462D40CE8A9
35F1A4FBF28069AC87738CC5A9EBCCAC77A8A6E1946216670A46378CB6CA6AC6
F5D7BE19EBAC2DF93657BDD0350F7F3503DAB52EA58C9BCE0091DBE30263ABB0
5BB6DF3BB9901042FAAC81D7C6BA6CE88B5BC2A6FA02E60E6B48DC50FA1BA5C7
4BC0E03AD5264DF42AAD3390E7F7DD4772C2C44CA5CC6BC36690ACA12BD543B4
42E2944FF8D10740FBBBF7E67D650765C5BAD097E539CF8AF62212FEAB549D3C
44EE3E4D66A13B2DA0714D83277B87ACA9DF178F1D5ADF9ECCB266E779C257CE
18ABBAF0BE54384208E0CB32ED05603FC40CCF98777B07C08DCDB6154BB21362
027716FDC481D24E773A0238ED40D339B30B9DBD09ADFC8EFF2AC8FFAFCD5274
75BF4A9BB338E6E2D03F99B4128AF7A536FC4BED6E7D2BE9F396C3FD8917B2FB
9215F666582F50A1A0A95AA8D555D49944947957106C30D362890A484FB2EB08
6C3955238461012D3CE3AED431AFD6BD625D5D6E374EBA38E175184A71D40C70
C47D82373BABF71C569E970B10503C47264B1AF97ED7384C52C77E15C6CAEEEA
C922B8D96ACD0DBCA57196925E13AF154875D29EEC2A5638DB0177F4D2AD182C
30501E99E296E2CD22EE3229B543155AC271EFE899C0B8A975DBAAAB9ECD172B
1BF7104D9D776112FB000A0D90615D429305F2C5C51370D6CA338C8AF730A77A
53559913E6E6DBAF122BB37A2FC9CD3ABB96A52CD0C76139CE04B19F00425559
88AA756B4AC6D819088D50C68CCB929117FEA8E2E2D3A7ED322592B4B0936363
9C4872E1ABD815FAA4FE47E4012FDD50EA34A72F9F022CACC89DE36C96A438E7
52BB9BA53F8015D098D92644655776D4FCFA9F34A54FF4282AE7FC208D21CE10
6C2B7C01DC431B339CC0868897558BBB0D39641D3DBE63226157F20B2CF89B7E
D5BEAD3ADFD5C55F1684265946899AF32C5D002E7B022A308706C20E6C60BC42
40644D4764347E24CA0F126F1B3601A103BDE0F3DE62394FB215B9BF744DF689
987547001850F7DC6C3330A7138513A0EF72787BC4D07D3696A4F22BACF91231
0BDE57926DC6FD033B4E6E70C72B94997C639431E936452A7A6A918C63F9BC8A
957D3DAE33E4252020DE42DEA46B286A61DE51FDF50CD3F45211DB6383A0FF8D
83DB67796B3E3BCE110C4C34DBF2BF7F06ABCF16BE370927D8DDDC5240EB8297
CE1A2C03653896E0D386EBB7C684412EEB34BEC712C253F806B5B4D84229B85D
7C094B0DC33B00733ED42820592191A9F99D56A84DCBD9E2CB38C99CAB211FD7
2B2C90DDEDC00B9158B82398F4ECCFD9A5E1A4BAFB1626313B39D0B48986A2E8
9029B0C1F8D53B6615C9720D81CF401B65408FBE619654716E06236E1B9817B0
F44F37F0DF7F4197844FCF641FC94A8398BF58FD0442B87DFE2DD63EB77D46D5
83C33D4CD34CBD175DC25F7E467F6AF5128BBF49907CB8952803F812992A1D8E
D0E05E44DA9DE679A9F1E9D2BBC7EDF57124E11BCAAC0E924DDB4BE63F76328F
447A99A5008C4062CBA6C93179A76702581A8E4FE0232930EE0AB1F261254A16
CF088131AC82FDBD22F2AC86AE8D4E306971E52CBA9F3DB410352ED61468525F
81B3FE4AA58DACEA04883A08A9FB23BAEE2A4D7A39357F9D20198B1BE8558A19
CF3E04F1CA06AF4E78210EBD5A9DA823E1E867001574AA4637F49DE439C74CD5
57DCAE8A25773EADC5436A55765ECFB3BC29D2DDA7AC6A4986417B7DE8AEA2D7
A51E9E360265D8E7EB5B27A29622399DA12C7BA325EA3E53A6384AB1999E12FF
6E50FE72ACBD92D1BA24E033BCC74E3915BC077DB3D0574BAA2BC5A27067BEFE
5A77BCF99D963D769A957C8AAC616DBA12EB6BC13C6490BE50931417A6F3B2A5
5E619F26B45200693D9EFD2EBC725A09A5B4D917C940F91877845B251C3CD01B
031DAB9FB52AEDCBBDBFCDE0D4E6657A7600D7C776D5D93C29008B5A55769559
4393582D1A327E6DDFEA402BAE33040B524C6B3CD10045C6D935611153D74FFD
3E678A274589D75874F57BAEEEEEF49AF772203D430CEE4C9525128B1AB8CE52
E29156F73988882C25164D362ED47FA64288A49CA23BA8857310FEE11DF829AB
B354A12F86663AA4AECF8CF7F5239B1A76AA228B9FC18B10761347C28985423E
CA35DC5A92D21A9FC34639E4D20B6E2E92E20173D30A0BE79A5CF69FD8E24A72
BBE896EC2FC4B24A75EE84AE871894354332DAFDD837D833F38F1B0FC9BC879E
74FACEA49F8CDF53C3BBB870074F85072866D81DA475D147FF3EC4CE2957BAD2
5B9921E9AF8C0075ACC8C1CCD614B93D4295EF05D10DA4D24BCE72C5221748F1
CCAB3941B301F28D19C4FCBD4E598D9AB31DFA71FE4D9F14C90C3DA00B988208
BDFE7B734F9A88E566C2711CDFC435C0F0B048208635C1BD704995E1E99A91FE
E9DD6D32A03CA2086AAFF0C6426E0FC900558663D008C85D111E5115BAB4C7A7
C59479EB05795CF1ACA31A087050F8F914DD8906F22F34C69CE037C568FB3FF4
848C380C3EBE78511AB58C68F4E1A1774C86AE5DA0C8BB48C713AA78243C52D4
E02E82589BF07244FE3BD8A7262EB8905DA6CC383E1231DE367786BDDCFA6271
10278622DD023D8E5C058C8FC83033EF77A1FEE3A200F266E550968F0BC0F550
A1DE5FAE9E85F22FD841E22E456BEE92B3034DB469CA50965B454BA332CF97F6
E8A806F9EF78188BD95E6B7BC3D3680770F1FE84D9E707318EBA050F6332F7FA
BC42573BA0EF32211666AFFBEBD428D4BD4D8F1CE61EAB352E9709BFCA9EFBBE
6A7D345663827B7FD6E4F94E3199EAED8EC447B9C1FBAA7C533841830AC556EC
0C2C154902205B8CDF795CDCBAF941BAC86299153D45A0B439FF1FC4FC68419A
B68AABBD122B2B25EA3DEBD68BA694011E44673AEBCBD0A74CAEF9C7C6922E01
BC9410A5760A9CBE46C03BB62AF3E294FBAB4814C8C058EDCFC6CCF05756D821
A6737DDE21D9AF3C823459C914DC8E14847B18EABDE18B20778A0723E8F1C9E1
7DD5F771899DC33F741945017B3FB5C96D6F3CC584BFE5F7EA749423F14D2789
4ABAC1470F92C54384593AB5CD160D6FF7E51E594C90872DB45A7A8DAB5F6650
BF3FD0AA5EFF19D22F5DBCE06A26B199715F93C79BEDD477E83B0DC0B34558C7
4BDB5D0AFAFF0687C7FB3B59FD40D27020F291A12BF70205DE7C4536CB00F579
4F27D7566489A07C070412315236D4FF7F02D2288D4D8A0D487D94AAEF568BD4
E53A42E5240224CD7584B28AEF5434F3C62BB1114B4DCF7F6FF31E19FE8AEEEE
6B03456F2E12CEE6B4622764FC7D622D02BCD171F0ADE61D6363A1AC7903B2FD
0A8290046C7FCDE2D1EC735BE01D88CF39760AFA763E5639F28BCBB8785B4A42
5D502DB072B3525BF9637170A767A5D90CE84F6FE275A28EBC72F9292985AFA5
0ABEB88A71B6CF4CE15E83114B3EBA2846157862CE661CE46D2A171E4091BEC5
C9D0C7C8B6147928A0303A6E16640F9E0818B543CC1A4782F1C8DDB39BAE7942
0A45D4720524E93647AD2BC99B60B34037FBE1DDEE7ABFC278FCB52043CE6EE4
FE15498F75E83C876BE70D452CB6C9D8BE048E37019825227FD74DEB037B7A4C
C7C538D7314FCD29E4A827D2B2A36AF76850979D3FF9ACD510CE8AD4DD8BDAA9
FA0853068DECF0FEF62A4A27B4EEF31EC73A5FE283B926B0289DEB5D9B92B0B5
802EDD9D9AA36A34805520B8FD20DE8DCF8A05D00ACD19E88F2CA90F341C7DB5
C8633BF20346841E4A1E365CC63C3B59EADA237FF8FE4DE7AB6B855E8802F487
1CB9E3FB6DE51DBEED71EF051A67FC0C1373225444D146F0DECE4B5B7E0C178B
2CBA769E01F888966F0DA9E9AF1489AD5D28318F1FBA92E47603CB1847F4B513
F170F2FA2A7A99B4126F7F8925B8B6B71CD95C3FD2F290CD294ED38E03085AB0
269232C57DF5695477B7BB307553465489FE8D45961A0193C37693551B29BAED
D185AC5DBB9F3B1B8545517F42156E8E585D719D9EB494F9101EF7D11C162CCA
31AB8BB6B0984FAA051C3683B6316C2B32196ABFC771853ADF41ADC5F564BB9C
424761C8C48112A720353D2918015FCE2CDF922F372789B330D4EF75EC6E82A8
F1EAEE83DA671E7A1AF5B18CB748281511C47367AFBEBCC5E6430E00E7AA1B80
C14D966CA3594635D2A301B7F70A273F91623346C7E9A9B1A8DBC83DD27BB22A
CB9A366B83C12DD0C145603397EBCC3FBFBDF9C94F7639E08C2F78DD60089AC7
31CF8D909919C98DE964ED4290334D76C149903AF061A37502252F81FC44D408
9B4D8D881766B076B2D99E54D650C6DC63292E44D7C45C43E406D8CAF6751D42
E29485C62F762B348AC92E2ED23F0452C57CBE4BE14FE5B40C238AF43525AEB0
5969AA9092CD2C3923FA5CABE94A9E24B9EE00C11D66009E87D2A42DC46F136C
DE810526FFDCDB835083EA77205FB708357328207EA8E4398C7237C62C96626D
3965C51527FFCA55C59982EF67248C75917609D5463EFA0226F51D8F42EF3856
D1B8D495306486F7715FC2371E36F51EDA6FBF900FA2308B92DFA756A9816531
7E0D8DF9FC79F85A25A8677556EAB45B4E0E0B01C367EDA6FA1A659EDBD515EA
A98BA581B68EDC38510F9EEA460C43E068890AB3F47CDFFF3BD37A6BCC5A1CD3
D5501091E07A08C2D8703365C70ED7DEDEB6D764C020C0994F4C9EBFC17BAADB
F33CFDACFCA162F741024CFD687E98C15D60C8F6CFC63EEBFC71BD42C21B9F42
89D9566C7A475BEFF2E820B9A83206411D4359B3AC5E1AEE9E009DC21BE617D9
F89627DEE0CB50F0B846178ED57A84D7562576D5CFC8FE57AA8EB10792F18F4F
7998BEB8D77C28FE41445330241F1662952C6AEC9BB50659B9125C3D371BA21A
50D6D21DB9CB76B2912270DF02A436C4177E8562581BDAFCA70DE33A50B00585
7C028E8117C9763A6F24A4FE749403CBBA5FA51FEFC0B57FF465DF8F8F55CA40
43D23029D4064273E2EB4B034F16BB67C5D0375EB41B1B1123D2AE06AE3DEC37
F489FB80ECC41F89FDDA7E7C46A5735CA2AFC9CDA4482308C3456D3BBCB42316
74EECEEE1975245B19692762971B7AF61AACCF5ADBA3F095A1CC1DC11107D6BF
F759194C8705462BC38B6216AF4F0904840C69EA6CE36FA983F2A6C137854133
A3EC47708EF40B1A2172FA6E3A69A8F5617EE28817E8B3E86378A7648CF30DBC
3BF73AB917017C5FDC42B074A2EECBA1E9298DF3E9AC9D481B5F8CCB23F8054E
895299785FF6C16553E6AED2F6EB356F772CACDBD8E8E849C3B67ADBB330B7FE
D7B59B1FE4302470EC0ACAB5E9A4B598170380EAA6715ADB88609EC80FA5E224
2A705042D2DD2C906590A17882E0F436F885DA866F435AECD81A77F96FD8B787
B059068A8A67ADE304189A9934130B1F6BD613FBAEDF7A8BFDCEF20D33F3BE37
48E5C91907F4140FDAFE54AE325715AA04C856D866042C752409DD19A2869406
5E1F04F991DF6C817009D661F5D6535EBC0C51EA95E311C16238E0E2FA1C9454
585ABCB11D468A981CDA74DB1E7B53E24E2EB935991C9D7A7F59820E8BDF4EF3
CB612EEBF90E0C8AB0E7286D11AEEA7D9211C722FDBB6CB4E4EC4964E05BBBCB
5AEE369A83881ADB8475EAF2FE6AFD66BC16AC9983BFDD98295458D304FBAD30
F0655DEA152B193BCA054847590C99EDB7DC16D3ADE800327464254F67C9A0BE
CDA45943
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC13F154032A
A1C45D1A3DD9230A4903FE5523D6EE9BC66EF49B2617BE3C1AEBFE2BE26C3778
EE778AB577C5B9E476CBB0EF69EEE350BBEA9712CD97BB2821612964B30B01E7
B08AE39BC8B715A5C11A351E060C8ACCC73F7D8B3B33CB35844961E68842CFC3
601BD2FED84DC32546F5EEEFA423BBAEE305AFA3FB216983DF61299A86F51A67
1DB10D74D95084ACE3907DCC79E6B2C358D53D1A83C0538DF2F8252B6B963B85
BB230DFCCE6BFD3D847DA4F518B81FADA81814332B622EBE6848AE6001554502
7C5D6643ED9E898E52F229400B725F50C0CC1C0B40C04D1680D51033154CDEFA
C137858D49BA7B27E4904BF8D855940AF0DF3BEEA126AB8ACC2E93B1551E750D
B24390D7F0804F28A5DD460DFAA537CC1DD8B32132A2E7C1B93BF1A2C1CFF129
1DC961C949F1641B11368B8A426B97CCCA4FE1A799E07290CC69337450707969
8C07A7B9A821AE7CAC799DDC5C6C5A4AC9E21CE0ACF1C02A9B72F3C264E40D31
BCFEBE729C666E929DD2CC04C4F66493A56A4D7F7C59675EEAF84F33556BA9EF
15C92469A7666520B873ADBFA7CB2C670B71BDEDA9725503C98440DE5CE23DAC
7D1D4D52E872037221E7F6EA9377730189C0D18861E5F87CDBD81FACC7DD8009
1F968191E7B7F96056299EA698C1A77EDC8CB025B10C08A5B355BFF415BE682F
55D46314BE428EAF295655A9E39C505CCF2C13C8343C21E274982FC4533EEA16
716151F6E7C2DC1E66CD4C0B890E4E8A7796D3DFC578A0356F0E9C2391D138D0
D9487329CCC75B1E69BE9B77107D6B5262104B9D3B06490D1261E5D021B99656
7ABFE151FA5607BDF3286232781AC94326703EEB8DCF9E74222A99B1F09378E5
799447FAEF52D31BE772DCF52FB024C8364F1BCF967FEE2B858E3DD1D270D545
6DD52043ADC089C9F1CC96E65C452DAE2678F0058AECF8482A8F9FCD33BC5F0C
3D63AB782567078B05975B4625D5BF539E5C9D34D5963E2086C854AA22C689EE
739E003209C7960E66BEFD41F70CEF7AA35548174F41D78903B40367915D4EEB
E9B3D1E6CF23E0D97980F20EFD24A6644AA26EBAF342B2A2490CFA3B4C7D0B87
94E078FF15A4159F644CC8DA765EDFE87F760D7200C559944587EAF9A8B5216B
3D9C02F00B43F697D889D0339D2FFBA5F17EF15B07460EA8E04B88C9EEEB2DB8
0D4D07B52CE914D9DADF80E6013884A89FC8D6AF6B602082FA5C9B2D9784067F
231811DA066F16583E31EDBAF6421FD5099C6A2A44F3575013581085459FE250
BBC34952DA89424B39699756E52D93E48FB55EA88EF78F27314624BE5B89CF44
6127045CA4F140E068462CD8A499FAF2C378543627B91465F3EDD6871A71DD2A
12FA85F384C877619AC016030256DA037122F1486EA74C958CEF71B78A82E104
EB302C890F0B281C327F42D6ADF6FEFB53E64E94729FB95EC57C747EC90C94E5
6B8DBF4BB11841871D0016ED45EF083D8B7306E4DCA49805DD8D20731DB26C86
ABBABD0168822A04965BDC89A31CDDA832A06CCA0A3916CB5692EF95A63990BC
D918F159DA7EF9DF36E7380625E5E5B138AC5779AEF638A38026626F054008FC
5CFF14434EF11317DC8D95979C461AA69DDB99797D1DAB570988FC9BC2ECC2D4
62741B8B18B2E38D00A0BFAC13005AF89C6771D8961399208389C4602E0B8421
B2F57E7C5935100FE4B404ACE3EBDE60092C5C7E58760E6FCFAB8D9ED0E80735
F683B9422DAE5435A542C8389853B3E316D1F592FBD13388424848525DD37049
D7EDF4B3170188BA06228CF92559B3D40247DC7BFDA8939AA82604F3C12F8997
F1A4071321A7C67A2462C77EC0ED1ED7B6548E29F53074721D1CDEFCD8F5E627
95B990DB5F017A12825C0D6421B797807170F11E547FC3D3A09261C3D3798EDA
35F63E01F904E211AB3D3362FEA9B831E269C4FC8B2C712752C665F81B1E9130
A495AEA05A67845C005021D5C60A628121B6317FB8E40E11E48E61DC6DB3FD91
149EEB54F16863203613AAAD505CCA785EE521B5D53E47CC255951E05DE00CDD
A4763AAFF2692126B4FAD8F3847458A56C0318B909C36E876EA4A51D0B7A3A3D
5453E78B3C9B3740FE2E9D8D7E83BF13A9ED60FEE4E1E5FD2FC4F80424AE8FC8
2AEEA335B5BDE7D7B8817FD867606E45BC24E1070FEDD57FF7964EDA746F0529
9A325053697A9C465C6133EC966606A77243D3A4AF735DAE9B65DDBB7F516D1C
CA7C87D294C017679302C9D4C33AD55D9E9DBDBD2BEF6074DA4D6C0DD2C8DB5A
562B4DADFE3FD9452984AD647D93BBBB459CDBC47FDAC925AED7AF8963EB5329
2E6469A8FB64875E116549634B25D52CF19AE531798E08E42DE0F3862D6188AE
9EF8A294FDDA952D6D1DCB0481C4DBE8A6CC2901C294D77ED6947610216EBE1E
9B0B09749ADB136A36AC2B8E5D150CB3584CB2DDC5796F17B54A16ACA130DFBC
5CCAD3452A7FE5A527D3A9DDC1C8E5A1260E0538B948754D013C105E7BAD6D74
4227137D55E6CBCB5368F2419DD223827EB960C01DFD5B7C33A6DE4D9BC2A097
C1FEB8776D7F800C040270B499862D6716D99F8263BB49B5A0E536FA063D6D8C
53508A79C1DE72E16C6577104F6CD1E56B59747A1FDFE7AE75FBCB66606C1F99
2A1D8ED0E05E441BBF12394F7EEB8B381CBE97575EBF6B7F14B8887F576E9D5C
9F615EC830A25DF93AE1D7487E2406AD30A2E8B6A1A1DB86B1EA363FD9D6D92D
DE4B0DA61C03BF4360FEA49064FDE91479660E7D79B7329A7F6AB723AEED60BF
2E1158F057A959B05FEF5314A81C8FC032C23639407AE0B9EFE412D67F4EA73A
EBEF22A27A8BCEA4E344C196954CA9EE797BF8BDE5D7CC3F8237395F6037F018
0333B6DC8B2A920D8CC9EC66930E5533FF3A7328F0675312E62C6776E0C844A0
E1323D2B6F75740D556CAB21764106CA1D5F489F0B90533F946E80847C1B82EE
830C3955C1796F1E39046A34DCDBD026DDA2827D99F488FA5172D9A6370F9198
AC03C53D44E083713265888CAA4368C2AF5C63BBB5C3C351625E6530DA44967D
56787173402FF304BBC1F99C337C6F0E550BEF342C82607CAADD1F636AA34EE0
AC72369A4F872DF421458EEDDF98DFDC51AC170E4C758D505BD84998FEF28E49
E7BBA32CFA12942CEA6EFBBCE1214FA7E6EB366E469CA5691562D631C06D8FEF
6EB0627A31A8BA0D791A5346DFBDE58644F296DF513D3154E077382557833F7C
585724282B66999D4428C21C088D1224BC316B6D0C35955B1CC85DA26F0BF643
1C9CE2E583E16CC98083EDA1B396BC6C9227DE45CC34938EEAE920213B58D679
28399CEF13ADB7A66F15995DD6114E1EC4569A929D38BE7DFE470486A8A2312B
11DE464565B1D2AD8D5160C7E9F656D93EB214E1FA04F0122339A9092422F855
0342E56C98651609E284BBE735FDBC83231A84D8BF9F4346EE7C154C34B7DCC3
346DB72F2259E3ADCCCFCABCF05D964D764FCB9026A9911163B35717DFE87469
2145232E89FC52487BD40EC2C2FFE245B4D5889C9730D6ACFB73B7ECF503EA4B
2497D40C7F31F7B91923F0511EA1FC0941BADF67DC1781450286A25FC2EF78FF
074A6E79521325E391FF3180EA2C9F64DB7890533FD3C3F5E81F1D05B98F791A
7080D29BF0F219D67D2941E48EF1AE311FF2EE131D9E44580F34755A33181455
6F727F43BB6F31CBDFDEFBE4BAB0CACA6BA29C5C42CAB2E88D2B4A3E7615E7D2
75AA4EE5B649BB3FCB4DA15561F0EDADA3B6686C4C1A9438757D1835465DB7C4
CD0679FA990882F149552ACB024BAF6640A8F2D318C7286C298187AEED675B46
8DC9BEB023B337B0FBA022555B0F3B100A75C16C07B7347732CD174C556693BF
191467177B1D88F44547635D4173F3A91074CDC37FD5D0DFD2EA66F4030944EA
4F244CCA152F355AB82420E5D3AD60840594A829AB5B6D78C77B3FDBF561F770
038ED1EAD57A2A91898D615E272673C65DAC240562CE7FAA8E039408F326737F
4B01E538A60CD0508BD9FB849F3AA31CAD5242607F7E78ADE3778E2C25C1E58D
29D12300B1FA09A6ACEDEF262458433CE5CCFD6CF35AA813C5D0687E277EEED7
FB62DB17E7D56CEAD8781D623DF05B3CC7E5AB7C0429084ECFCEBD777E6FB606
4D0E985B59F8A03756C12F1894146A49C89265002F731FE935B7A9DE9B347370
E16EA295BF92974F2D0A93D2E652534286424F5D65A4885EDD307A0797DFC4C6
7411D2ED2C5E64E2E417C6B64D772507BD1ED4E36205D9443FD0145DD7514A79
295A7D3BC28E2E7BF13ACA9CC654B09BFE75D70CC63C268134807955C50C61E9
CC0913BA8CC8910E6FA195F8DAEC9548CA520869E73761267368B04780561D28
D92BEC0FD48556A2D58B28357BDB2F0804F5066AAB60C5346E04391EC36C76A3
38EE910180AF0139132E4697D5115BBB4C4FB26D219EBA827F191C3AEDB1755A
0341E28C3C4C48A42D5E00422F597F990110E956E3AA3FF8B55C2286CCA1B25C
6FE6661B5C08986F6087412B69FC7FA7498276240C47109FE835F33EE948BB9C
BB9A6C303E3068A50BD0C864C5E0742DA3BD72F1FA2EFFF5BAF51A66BEAC6591
6EB0782A4A10D314799BB114C0DBADB8F7ADAC320CDBFBD765484AFEF77CB101
55A962747A7AC47A9D2F4A10FCF32787186F2650B1FAC116BB9143CCE20C908D
AD730609D523675B596817F2352E4EBCAAB4190C1F0C4DA4A69D4A1C94CC9E7C
8673FF7A5DA11412AC87B96A717049EED8869BE8ED6A11315A792665BEAD8EB2
FAB82CE03AFD40E76B33E6099558AFC3A3C437210AB04EBA6274D15E3FE33ECA
8E5E0CB8B71B906FBCEF62B25C288841C9B5C2E85261C505BE7E3C9C7D191CC3
77126A41EAE95CC9FCFB75A470554CC7DA6CE1BBBD19F56DF7FEAC0256D2EA56
D50C1AFA951E217AFDC64E2DCF862ACE2736802E616AD54E40B7D5FDFEAC9B5E
4E1D28EB57868026A9998DE11698B684B709850BA0117FA45E426B6C046E9A08
8FA255FDB40998E518680AAD2CD473A10EBA3DF8E102DB08E524CFD6BA64E896
EDB2ACF366069ADBB1B9CA71D375C7005C3D71BAB3CF386AE54D6D57ECEEF7A8
6A51787DBC2A109E2F821C28ECD4340FEC1FCDDAD347B263664D7B32695AD1DE
3E935E231AB657C704B4FAADE3CCBBDC78F6711C90B4EEFD97AE5D184F743ACE
50A98EE53C256865A4E45306E0646863CAEFE1DD07EFAFB9C0229B500ECF20F3
CCBADF5B6E41231960B12979446B2B0BD9996E88074A18DF5410EEECE1E63C41
DE74B31EF41D3CE547C06E7BA4C055ACC17AEAB369FD7E00A55C4F9C3000208D
D2F5E64B1897278045A990036DC7D26D6DB77BEA0B2C6B2E0B3D185AB75D0FBE
E47DE21300E086B6B72A4A6C75B51E4E9BF6BC594EFBA262EB2C414E43D8ACC9
CB195D12F3B2ADBC07EEBD872519D89ECB766FAB70ABFAD26F89E61703E3E869
38763DA88DC72FE6A7DD768B984FEEFE58A2089B5E11EB0574543D4AA0D04B94
5257A16BA754214E95E36240D3C144723F5403453E9B176D8D68FD62E9FE76DC
2693EF95F5CEFF173F2489F4F89E7B06D64F37B54E505884580D8132CCA0AF61
11583071A340C757238500D52E59994DAEC9A3D28BD9809FEE07FD469D989615
447605C72BE097018749375D92AA335837AE286EC25513585E65E1A226D43021
EFA91619589B3D213DC74828C982EC902B2094A5EC2C0F0A8379A1AF23F62F9D
961824EC0F2DFB705C1CE3323F2DD42175DC37C7ED828C886A8D9DE3DD8CEC49
18D7FE142F2FBC5F9332C1ACC7C13548BDE910DA5459627D2B60C7A3E39A4C63
D2D2200716EE72BDC76A4F397CAFF417D6C492114E073FB189BD5C4A05AE5047
BC92EFC4E1B9BF5FA28886EBFD84A70D93D2962767940F4759CBC2995DB0D302
554C47B4E0709CECF31BA7C10AE8FA91183F67250926DA01B95B01EF7F662556
B969309B89D5D929D96441D2BF4AA1928975EE36D9498ADF66F5AAE5D2A7A3BB
797427929F297C11BF2458AA2CBBA0B55AF5C3B9AE9CA34A56AF169E5CFBC983
B70CF0FBFD478F7BF34168032E3BDA3D3AF103880FB4F27684E11066FF228294
C83C87E450CBE75011EF5C62577EA0F4832B0E6031EFC2815C9FDACCD9B65C1C
3135F23F98B42EFA86EE677B7C33361DAA5BC1326E0430ACBFAD2CDBAB3190DE
8CA0FFF7488F5D5AE7AED74CCD2B72602D2A8F763D53CA5561E2A02E620B0E46
164BA9E68A263F241234155871048D265442811D8EA7BB0466A549216B09ADA6
C51C969AB999646DCB329B4CB8C4E5A2FEB2FC55D51101C655E4B3764589DFAF
1AFB1FFBAF674F5FCA6C592DD2099561F40C270CAF3B1AB426D523C988DED0B8
DF52E1AB36D5905B39073D9EDA2B181D5AC38F9D2265F30FD77935751353A305
C9FA7BA2E8867A571AB6E2806206C28B92C6C67DBA12E3B7730F2477D565C693
F48F4BF51DC5F7F319DB82CF1DDD94C08D272770CFD97D2DAE671E0BCEF164F4
2B999CB46D339DDD22F4005785EBCA95174B938389B408DD5DFA73F1F1ED4EB5
5C5DD7C4F13CFB730705D43157E69FF5FCC607A1F2A739349A929D2316002B7D
B95DF6FEF0ABE77A5A851274EC8A18BAC98A033C2F4022B445E5B6B050AA5C90
6B6FCB227D35A1C9826D4788AEBC28D7DE5CB57AFD555A6DB8BE888E90B9B65C
C2A75DDE05C83A7A6367D6A90DD44E6C1F7AC9E3DA6207F2E7FF01053145BDBE
B7E801AD12039363E0B2FAE57AEEB6AC3FCC144E70D35C6ABDAAB9830FBA096A
9282B0A75E7DB101AE732FE32625071E55A936DFC5029B7635B596031DE14119
F43F5850FBBE3F0C63F494EE4B5AF80DFDFC2029ED5FC9E3396A213E72CD8E9E
BF33F6C6833EAB5FE3EAA0F62E59DBDD3A7CB1E1E8F85DE58C8B985CFD62CF32
A26B0565E1BD81A941226C50267C94229923F5D74270E482E5162DC70CD52CF1
B88EBCF157E6F0C0E3AAFD0BDB1EC50674F4405E1D461A1FFA9FD3D5692433DB
99624D998E3DF1B1498B01234985820F1C4C3F76E9B25318716BD5560992CECC
58C1F3ADBFCF6604A5A9C53C008BFB62B0D0DD5F003F36B78B7A3D272EA7EE3A
15B7A378D10DBACC95B986FDE5B3E3EB59F7F988FDD74A6C5D332E714F32190A
7D25CA2840617D15C93E8B9BD2503C6D8495E50270A357238B4C1A2EB0EAA095
455A1E0CED957788C1BB0E9F2451DB44BC63C5E50C5C5BEE2B0085F522887B77
EAFAEB60716066F36B6CFBD95ECBC414640CD0D392BFDB65382AD987594516AC
1DA2BE3A0C6E26DB2CBBB2F3B2D3F3B7922960E448F097FAB0821BABD2371C60
A204FF3C930FB3D33882413B67E1B8CBE398B192130DBCD3B34C6C4DFA42E7FA
03DB5A9978A4C5669521A43C7D05AB6F9AAC038FA211E5910382BBC859A60B97
13E716F78596F226AE544864CE3B31735E87B16B6930354E3F2432ADC08ACC4F
3F1516F49D651C7D164F07B5AEB0E5C8B22DF53E8597ED19BBEABDA877B61551
6C0807C1A7B09ABC93A4217B0B7EEF86E7B71AD18EEF19944526B004738FCD6C
7E164EEFFFB649F8FA0815EAD8D0665774840A4CA0D47CD9FFAEF21917B4F655
523972C46E136C8331ABAAC2A34247074442D2C1A5D530B83B4BFE7CC88E57EC
DC98F68C815575DF5C9A4570BEF35C50DAE3456CA3DFA6E57D6D12EE1D270418
FD41B0E15DF12C9E50B4DF310C81672F9ED28E325E98CF4FB75B7FE0F824CC32
7A00421E5341555896039A000E4F0DA0366626F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36F211E3B6E0537CB531FE4
820EE40ED9975DD3E17CF21FEBEE568D8F67B4409885C068941DD5BE9237421F
854765415C7638C6BCA5330BC8A57E29AE47561AC3E73728A55039E4A7EA63CD
DCB2C2AA2FD0D0C43D019F687663ADA3764F11BBB2FEE232D41923EA3DAC7D1D
4D52E872037221E7F6EA9377730189C37EAA555FB602D83C884F25D42919E651
D89CCB2EDD70C8B2F7FD68DFE38FDD969E5596A47F9281DDE78AF5C053878F7C
4ACA04E8FD6DD8016F91EE2EAD0AE6BC9EEFA1AF671D6B08BD452A15452761C2
30598CF48857E7AD4F4C5B4C9E2CB7B2D0F9AC47E4501C0E3AB6F8E2069ACB04
5E0A2B4268A3B8CAF718CCBCA8F4A894669128B0A60BE745F5FD383F35D1033E
400DD5C3AF0E83F333D7E4C39B77CA335C4C3D5E52822571A89B752398832D56
02E0E2C6FDE0884A7E80D7B112A801A369534ECA194242748F7A878F8F30EC2E
74BFFE3D3C359602CBDC9C3C42BB71D3A2E777FC8F92A81F510B126BB87FF3DF
51592555C30DDE4513B47895057AC24A82FAC75A8B17D9E0517B64712AA2AE78
5CE0531F33227904D8D5FC497AC8A40FD5021959D354ADAB867BFFBDEEF9F0B3
3AF42AD1D271C925D427E3BA0ED1CC6D6B326DA72DB40D889671F5F16211A451
4C5E25F84DA29CE9A676B2C82E56DE26AF149862434B7002E64F6A7CF7E917CE
F380A56494F426CA50B308EA5244DD4F815E3B5BD9142B97A7E1EE89C451BB69
C754952B5577569210EB50291B00B6FCC0ECB576378C5728AC6EFEAED5C16287
F5EBA53945F50A1422E7C365A65AA6D56F3ABA431878D08AA7C38C6306041A2F
CFCBEB932DDA22BD409695652C097937BC0A52B58E9B0B20C5347E475D900DB9
AD452B7541ABA3802CAB011E2D5D8CC6FE268B42BCBD7E52898A75EE64E98D6F
80A4EE670C7F1CFECB154D1DF0103E0A79EF1EA48C73360F8147C41A4AA179EF
8227AA60167207AF50DDDA3F4E4497714C8D5D3805E3CD4E8ACC239837767711
638D4A2946877980565028B49B1A6122BC6D216A3F95A6A7487485A275D15B47
93A659D7B64AFE36E705C557EEF62402DF9C34853565F5DDEFDCA20A2F4A4332
E04AED1ECAFB500B393E643381E00DE474C0F5DA5C5A47260F0C94A998451344
CF5637BBAE7B1FABFABEB5BA2584260514ACA8A7983F1B5EBFE03D186C66391A
E387189E9B93EA286E5C67C0B1A03EFFECEC5B7AD60F4B6C724290021804CAE8
09096126633FF7C833097AA7FC3F6B8243681A970840F4E6736B830A357F6CC8
FEEBFE0A39EEEECF7F0F0E3EDA50911D4D3A68BFC49EA2EB3AD673EBBED16BBA
2C0242D382D237F53F9CF797A194FA366C4D482154A4F1E15AAF0C4AFBAEF4CC
499F71C6A0FFBEBB0BC22195537F077ED2F160158087678D984028E32FB33A83
713AB4F7193E25D55BEC0719197B1ACE573727F4B65D8545035650B66357C5F4
C4C4159540BBBAF87FDB5536EA4AA06F4472844C2E235E96D3912EDDD11B6CF8
0C0E538B22F94137DABD35B6B9F7A78BB83DC34FF8C8AC6F85160394A43138F7
9B3F35D1603F6F483010684C8CC7AA0DC68F76D7A8DE9A09135EF4277DF23194
ED80A16C7719743AC00CA240A79E0DD24FF47802E35D9CF645533D86F55F24BB
EBEE849D3EBEE94224B6B5F5CDF20F5F61CEBAC7AB535180EA6930C4C45D160E
894902E84C9B4944B799F25DA4FFB0CB10B32B46449A896C1A64442E0972A896
8DA353EE854AAAC86B9C8E2DFF599D9302C1BFF7CE62381F21764D476C287A8C
E18E727A1BA93D172D0AD6F297DCD602AE176AA424107E9D41CB282E88A86BB0
2A8779694D0D3DC4C74F04CDC41AFAA5839A95FBD12A8B1479E822A9CCAD21FA
DD24C2E5321F21BB52E8CD782967D708B24C509B21794EEE9781554012FBD389
8A8AEB12606248C0E342A6B36013F3FBFE1D5647D5EA3A926D289758059D7F4E
AE9000334212FD6704ED7E1DE219E35F1684C2BF7B17AF0687D691644C35A885
9EEE18453C4905C149A1952C8D2EB67A919429877A762DDB37EACA52A3231027
C435C1835AA40D517834E414B3ABA24C9BCB6E37219C91495F989B4230922D7B
8C221C7F8C00CE0A2279592181990FF8C8976184704AE679D3FB1E4E7ED4FDA1
5B97A2ADFA247F40DFA46CC8C53B7EB5AB3620BF096690A5F8E9A270823234AE
94AA24388E505F22B5BB081987FA8F24B2BB2C682389DA00F281DD796AE6D7C1
EEF7A1988778B4E014D6601D929F6AD1616BD80D370ED09FC742AB0EB8B8F5D4
00C27DEFB0ED394E22F12005FF025711C13C4C6AA27437A6DCB16442F6BA8AFE
6885EEAF135DFA9D9BEB51AFE34684A58E570CB11E58E171C31732193BAA0428
F78776503FA99863F75D8DA09F26B259C7308806EA86B3B7B2D3D90E325119D2
7C3ED60F2573FD4255CD7CD790E92023BAAD73B485CF8B52B8B523D5031C82D9
AEF0A0074D9D6E441390C939F7E557D173A93FA0F461F6F999951EFB585A585D
C770C12DFF3D89EDEACD73A5BCEBBDA403D864EE4288485448F4CCE2236C9451
95BC5506843B6C1048FFD77484C11B0ED49B4575191FE36CD6A80C950961F6A4
92D0127A23883B3E3B1C356416462CE1C1E8FE3F51B6F7D7999699BCA1F02602
67351F3406386C8BF41713AC37307B364E2D4A5F420663A2266D493EF8A6EB8B
D7710033369417E3AD0274A110D9C62EC47FA9094C7DE91DB13EB95A8A666A4C
8B64E36CCFCE0B2831BE41E947812A143B145E8949705C13EF3C510C1A0A92B8
CFA5F4FE335D7E34678D981A6C3E4C05ACE9A52FF5A9B40234209CCBD7BF440A
A17FD96F67878FBDA8FABEA5962306ACC3598E218DC91F72A67EA15150706264
986EA31BA1091B44B7212AACA05B87C0D8B95D03EC1B1CBF149F9E0C14E7747F
B9DF2D77FAA26D0FCBBA3ED6028655FA582B57F5F30EC88DBA924D0C2A368257
F193630EF8789A3B7D976C53FDF8866D8D1966A09AAEAF5C6923BAD60AD4EE76
05A4C4696A4A61CCC0287DBE52B5840EEFE2B42291046178FAD659C7CD310E24
4BE41601E88DFD4EF6D7C6E18A846DA513E8AC1FB9D7ECA4297F32CE7F313B64
025DD88F4902F7AEA7E9CAFE5E3EEF5D446397ECB05400472EB5EF4F9DC0679D
34ED9E7F3BCFDFDE04857C842B244E9FC014615400400A7825B7CECE0AEA32C9
7E57AC8B85FB7E35C782B99E765FF7EF26B6F2BDE50300D9315E19F5821BD065
0C450ADB034C5D1E73A91E98FDBD269D7E2F2A27C232E6A8833959702450F400
D3E1870070E1FD0E8BEF7D7E05BE921CF6A04AB303023995802C08E31643BA08
1CC4010E5EDBF4F9068C29481D185931FB1CA1441574F03AC237E19C7310125A
C0853B582424573C3E3F20703E0FC2E86D1E73CD12DA7F02B0132390D62F98DB
CF212417C4D43F96DAF0F4E4470542D2CC43426E12AA995D2D6E92761380241D
CA9C84B16474372BDD737874A26351BE869052B6866C7E9A6EF5E84E48C44EEF
B0056E3335B8B76DAB0D4ACD870765BF65FE6A8B6BC7BA6164C0B9DDD0BE8195
EED9B1FB10D2B6EC74E414D24E702FE35DA21868FDE994A1FA88AABB64AA1962
1B2C4DCED52C951EB8A7EED0EBDC4507D5DDAE7633A1AF25D494FCF0FB0D9DDC
4D9C2856DD3335E82320E727AB51A26D0C7B3D54E922356E33EBCD23DC13459E
D49A3C51680D297181E29BA7BDB0DE77FFDDB9DB557327EB0C7F1C2EFEA41CBF
8B2D07E5A2F90DFF776D5CAD7EA3FEC3CAFABADEA1F9959D700EC14CC8D549EC
5D41F15779954917B6DE006612EAA65D0C831F3FAF88E9B2CB3EC3BF5877764E
45EB49EDE82497FC2EA89E9D2F00386000A1116FA7CE2A422441094E8FFF1D60
67DDBD0C5CE008E4D3BE5CB9A368709FAEE5E009D3154ADD4855B4001C8A0523
A17B7E089D7749AB1FF5DDB33AD7DA2142FE7D0387F10F4FAFAC431AAD943523
B7D7D5225F97DE16D711247DBA6A4609CA5BED916BCB5785AD3C9668AA632698
0F9D0AC96CAEF127E3F716E98534256BAAE271A509FEF0F0E91FA28DBE773851
765262AEFF2E15B99427DEB0EAA980358D2D7996E035CC719A47CA94728A40C8
D781AA94DAA86C9681CBA821D885EA05A7ED8A896564AD16E4BA3A9E78BD664C
7A89A81E47C75FE80195A31F6AEBF14EE40B4EC9530A1BE525C8ED82CB0883E5
D1B4A0FC0B16B316A562A50DFFD87E99DF0AC732588821529EEF4F1D68EE3C87
F15645B0F0D993BCCA82DEA2E53E1BB8991E49080DAEC8E364C2096569F6A940
A8D11F4684F635F4FE1028FA8129682F59986186516E2E83BF32157FC336EC43
CB28C79F358B12B5689C54D01C76CA1BBABECB4FEE254D0E4D8445173E14FA81
4E7EA2BE7CBF325D802D6152CBAC5CAAF428BE891A6B8446D8BB45ADF218DA91
687FC33CD98CBBE27EC58AB57EB7FA23DD16837857B20872A14DF27CD2CBE821
2C66DC2329DBF3B7079882E3E0B73C12F4EBDE243A4D5F09ABE70BD9A06DB0F9
B2A18BEA45D264137D7E2879F8A88582044AFE2E815290A41FE99EF52EBC7453
1D28E20389F75ABE53A2E305E727F3236F5CCE5392B3B17951E0CA38050174CC
F04572AD6F1037FD12420D9EBFE92B2478EE051045C1ABA2B4E74533E98F70B7
4CC63DC1A26A8348965AB2E46323C0ACB1CBEEE5C49B638AA47B10C8EC4A3E4C
A248BC1AE13BEFB1F95CE8C6936FA2E4792BE09344CA45A5CAA7BE9FB5EF7CE2
F6459FFC53359B83D79854BD42A5CC23B52B77D67D27D4CC950754D5CC6FC6A7
F4121BA5A80806371E102799C9AA0461C6CD86F35A2830B46280DB39248884FB
A457352776A19BCA564A1A32E2BBA391A7EC016C45D21F1768172DB5498EE626
FE56FE073712336591061255E0E7512CAF5C7730943B5D5956C0C8A4508546C1
0C92DA88F7DDE9048DC556BF4D18A2A3F828218B6BF38CD6B7F3FECF0C229566
F1A224320B37186F8E88A9DA8717B68B5625DF82B3A1E62F22C4DF43A93D4536
EA16F7083663F4B659CB0131B86C204528ADF4F9AC07363D76D8109E39C2EEB5
40CA48FF201CA475A5587F8ED0707F31EA3D2DEC8459ECF3952710E5AC99BE87
FD8B15AC5A3D9AC58F30836CD664F5E7EEA580124ECF6C4BB3057145A96CE395
0C7F914B56ED874F57B61EEA652EF37EFEF27F70DC8FE8873549E5A2B7966B6E
AE76DE2DF195AA01A915CC62934E85D9835853D6881919C35B70B5CCECF627D6
27C1FAC9BE0FC873644E2D4C2A2F5641728049B19DC5920F67EBE3C3098F6085
8A971075523F62C1A480ECB21719D9DF0DECEC15183792357CB08D2059627310
FF408DBBBC46A46F3E46657A87FC2F1A705818124E113345FF33C3F8B279CCED
AC7A8B76EC3645803375A70987B7B1F273BA66775B7F0EB68018B698FC2E1F0A
B2F25C9FB41E8D8B528A382614FCC6D18372072FC96762DEC19D70823157C97D
51B97C90D57DBE0CB6C757849B8D0E5A08BFF02C4A64455217811D87BC5D7670
7E00E32AC118DCE6BA098EE81054EB37656CB3EE4253EE766128BA016228AEB8
57A4FBF96066BCA22FD312B40B76636DBECBBB7888B37110E0DCB14201AA6C07
345591C0A903F9CE33A3349753CDE01C78271A65CB225715A351D56D89596B91
78494DD90753FDDF4EFB684BB28457C48375444DA05B00F10A98CF93C00B524C
7BC80F0C7AE4D25A6A9DC2E1CF8C989CC99D7BCD5C19D62EFBCD49E4AA5C610B
EA0CD6435EFA4E365C7DF74590B4E542ABED5483DF0D2B8D793FAA30A22A7370
DEF29061FDB60E59808D4C4EDB521F9B68CC6DF122EE468B4E4730519A12043D
3B5F506532AF71DB1680B8C2B68718B1CE6E49C863FE6617F91AF1F188EC7291
A4831215CDF00B5BD730B66A1E81329CE50879C69184423FA96314BB76E768E4
F79788E4FE72729CC0A46DB006DDFE53AE77BAFBB0C2150EAB84A6478EE3835A
75265574C57CA0651E67C17E86AFAD080B93B1E6C4E66DC564E7D44898B0FCF2
F2AEAA4BF399E09DA841377FD00E962E241837B647B20E2A467C168A5E1C964E
FB3176BDAADDCE89891E0AB7FC1DAB459098E443178B24F53A1C08D89C59C9A5
A213DE8D04967228ACDE56287A46CECCFC732D5A048B7F68EED0CE3A75F8967F
92C69D0BD24CFC106B7ACB8354F4D0191226EEFD06465C94C551C1013235947A
9DCF6955697C834F5B9BADF5DAF31AE7DDB6B91C68D529265C26B0B92EFC1FD3
A817137E46538BEBCB0C6B921D5035BD0D78A4A26B8AF55502BCAA7BF6679C74
A2E47B6EB1316173FD716E7C61933732B9509FB05E6B2A2DE0A2C44DF978885A
AAB67899E63F0E0A00B5FF3C2915465942F0961C8B90C8998F6A8468F5BBAFAD
4F96C717EE4595671E16E61083B09CF19E6027A237BD18278D90BED96F5B31EB
EFCC8FE74C715E99362BDB1FE5070426D3206446CC408242B135EBB3E16E9F79
43CD5F9EC51600F5F7EA0A853D6E6162D03C5D228BF2F9219ACF011E2933B2AE
9F2AEEEC61A9882D52A64444A90EA0296DA89AB35D2B33586A6914AB063FC89D
F9EEF518388A5C1E369B0C1832F97AF4DDA88621ECA9D2121AA386E6CF541329
9A6D9246FF05C196358C162D56CD0AAA178CFEB9FCDB70599461FF00383ECCF2
090031C5B33DF1AED06ACED06F8F1E4FFEB71523FF6B3F1BEA19C7A3F9B9696F
E4180834E615DBFBC9D922663A84B3D60676A964B5C51B1B3218719084EC8B89
2729C79600770DD180311C77BEBF4AB42B50F1FA0B6E73FB510F524BBFBEF41B
5B369EF519931299620468D5DE22AA8F38DFE2D0620F618E544AE7FFB96AB744
3E7DDF431EF5F71759838927964E0D5B0E91E886E017B035C0ACF7CF53472254
85D18FF9CE42D27FF6608B559464923575058F0D063D09FE1967E2836FC9FAF8
6F0FE36B6EB3F815D74BC2F031EDD67797E92838EBA353C3C96247CFE7A59D85
CB8E4DFEC333BCBC867C32588F8DAB91AC6BAAC00BDCA3E047064D65379A725F
D0D3C6019FB49699E75FED5B2390D241BA562392CB4735C8CF025E64E8F87271
A5BCBA69982FABEC375BE5CFEC28CB53F792E26064FE99BF1E20E83987BC971E
0162E8A925A14D3A41FEDA09F61BCFD3953202A70EE04E8363DAEBBE6C305FA9
3DB71D2FE3B3C99CFCF6D9422C8D1C1A41F853FF56A51DCB2F04094F3489AA48
B4DA25E5B046DC834CA11512058A73E514C5BACDBA79E400762DF18C41F796F6
F90D23AF7C84E20D9D137DA5E84BE7B16589B20A7E37C3DE9B970C55DE06634E
3628457D1B190696ED6EAFA4127A13C5AD223E1D7E047C1F484D7545AFCFFB84
F59D5ED1C6DA6463CA04AA743224CF4C02C4A01AE2BDC0CB9EA34CECBBBE932D
5FB564B8FD286EEA1E608C25BDABB3CB7C2B7990B5549E1FE042CF5B7190B763
5CF6CD6F24DA266B651F0044563CF5C4E1E8F2840068E9BD62E0CAEE6D1CE65F
87F376BAA18C27CE0195AB2AF8B2A8008CDB9755F8154C8843F0E0BEBA7187D4
4F88410E15095BC4912FD95E73989267F4ED4D37F7A09484A0F0F8393D929342
9DAB8552FD1699E3C36A68942F35A561B2FE7E20911C0442FDD25ADA3241ED89
CE44B62DAAEB9B1170AB105764CA11B79A095C248114ABEB188F48B26599A40B
DB64C945F5E84FD1B0595DA1F4AA0F1D998260B2561D199FA29B90E5AD50CD08
8184124BA3FAE687D7B02756301169D344DA9D50F7B0BC39417A99BEA015D45B
8AD5BB89E6C4655351034161AF20B46B613C23746EA19896D4F908EDEC434240
2E0A38F686561ED0B11A3B4DE6214A26B4A7A9A123D1D982E972C545A181F37F
D479C225860C37B8B70C641349B02682F854D89C2F76F6A2A8D87AEABC111143
B6EC78AF94DA70F1ECD478D899406B49E24E2E8737BE19E8A5F1AEE941D3E86D
B9066832227A0BFEE0A98B24612065A6A8DE77428BF21838785B8E7980D4FE3C
9E18B17F3159B47915C50B4F37A655E511B3E2A94F775780BF250085EE14CCDF
05E520999E9E2D09A50AB1D83BC40EB7CF8E7E313E7147C89F67B3569CBC8D4E
2F4583FC7AE66C21C93EA7E313615AA36661D2E8C4317DAE7675BE10880A7B2B
A3F74EEAA5019F19997F0C50839444435D61FC1A3482F785BCDE70DAF95AED1E
A8EC42BD9765022728537ED4F4F94AD58A46743D94502F103D40E51D891DF336
9F5F76BBE98867FBA6E008F6EE4A54BFBC6CFA6623A218026FA6FD45B4C52D60
B66BAEF51CB84A9B4032EAE475D50DF964339F6F8BA82D163ED6782B922C4669
7FA52A4772BCF5A45CA080641FFC1CB13D1596F4A14785EEABF3D32E7A7F1AA0
5A7C141CAA3AAEC4E4B53940D370AD591EA2CCC1C8729295A285667BF84F64B4
ABE14403048A8E3F3F28A80AD7FCE6D7E796363AB8DB5A9817A0046BDDA32E36
3D6419F53FA5CBB1252EDB7BCD7848B1015A88740E6A18BA7BB2703007162AB8
E88017EEE31113E9FDA71DC97E5C5910C224A919EC12431F1C319DD8BF2346DD
7E23ABAF5B193F45BD75B592FC3941DB911A493A2B8EAEFB1263C543C2597365
46327E92A80F36D4BF491C73EA1AE564C725E15924D69D3975B27F10B2A75C80
D4387F8BCE484D3AE884CA0942BA7F92AF5C96B3681D9A91F7E90D1BB2814CCC
DBEACD766CD755EBF5841BBBBA3449A0834EBF8FA6884D06E233DE02BB47DBF4
0E35294AAC78109F856166888ECA3389FAE77E75F9B4C24F519E5815300F498C
2DDC29E1F92A1FAF823EFF7E151CB8E9614246DD19182C2095B90D0061FE3FDA
5F46F78AA595FABF9182141803456060EB6B1AE68A07A6663CCB0CC23289F1A6
C71930D3F7256AA318B836FBBAAB9361EF763ACFC480F1F2E4159D59DE2633CC
5485EDE4863FDE1DFBF0C7131547D03732B58708C0C443D24E4FEBA8A38B2275
EE5B0FB4A41BC72E696277D1403A0F2926E3854693E63BD1191AC2A83882F84E
547786191B6C11D0BA0C7752837F13D212EF72E556BF506DC364B62EDB5E356B
CCD81B07FDC25320D4F3A1122AA351C3A7FAF6ECA8AD9E4FB7B2D216DB3E1759
5F0E3857432766783E85E05DF2CCC47C98A3A87148E791699ECB1BFC86DF7FA1
8A5ACC9EC634F7B028FC63CD2D24A0B682E7951AD9835DC65E9004E1957041E4
A4FE85AFB597C200A377617F30AE0A7581C320FF51BB99A0A309893DF104AD98
3DDB7FC6DB8321067163539A52B8AFE85B77E1DAF698FB0414667F5D7366364B
6EF8BC458F6E90EEE8E1C6A2598B436C8718E4735360403247F6C65C4B1FA3EF
7F310D65D411DF84E6375E38F421278A7AA6976C948C85EE254FD4F1AF1A4D01
982B6D3DDDA8E45CA1D02BB1A3DAB437F011E65C56EE500BA642D1FEC24FB642
1B67DF168519DC5D0E5AF7902EF3E76729B34B20E37AEFA81DB59AC719DEEAF8
7ED56F4C9CC2BB2B3F3CA9CBD239B4939341A11B20A29F8D342B9B71810686A6
103DE70FCB771C2F2759CE066CDE124DAFEFA1D55CA5B28530305C08DAC6CEEA
5E26C06A2F87C591C3F20A3C44BE102A48C6602F3B65A75E952350C969DFF7C0
6EF00CBF4E19D5B0110FD6492E579F6C591B6324D2B618BD4190C3FA0B9F45AE
937AE5EE84517EADA2AD684CDB1F9D182CD3395A55E0D8015CBDE3413530FCE1
5E49F5F019BB1FA3353AEF3E1E4DE9E021DAC3C4D81872D27B4B07E06D668029
4B30153CA0506D7F5A54B1D74955B442AB93C4ECDCAC1B00FFD9FAA12D2C61BD
680D996F79D1B96F4CD11D5883421E3AFDBD4BBDDC19FB113540EA39CEF9AF72
13BFACCECA6A0BC9E12257D2BC99A3BB8B2A51566D624C4FF1B7EF7CEFD171AF
358569C1CE594DA27AFFF51EDA12A64920EB9DF2CDD1CA042A0AB4AA78322270
BA17A8EC9D47C8417782321FD7324C18178F4BD05A3E430D213D72048C19E1FA
02494E5E7C5CDE836979C23121957EDBB9B5E6192CB6575B6F6FD326FE822ACB
B91E28CEE15A98171FF51BE776EFDEBCFF813881859D736CEEBAA20E8A822CC6
908F910A31AD3AC840B99080A7EB66BF7CD3EF4EECBE8584C4899F7575D6CBDE
965CAB3224E6D74F03E388C7C94C96CAC000F6508E7865A946798300D4F0B17F
D64A6010039F263C98AA46519828390AF5686A17CB992C2353A89EF7C7C82D0D
FFEA8E36E709743545228C10D080FBC3E2E6FF3056E7911DCB3584D543F0AD1A
7D08F4705E497E0952E5E1C04FE88F81470C0ED30E2FAD8E9F33AEFD96B8E288
5A4317B78BEA29ED24ECA12EE06003D353B9D86EFFF9E4A0CDD88B60961413FF
DA310A1E837ED319D0E28D9E2FD9A25B272F28D11BF374CFA2065680FF5911C4
80BB9CFFBB40B6146D1023643F150586FDDB358A18E51FC4E05C3D3028132418
63F3C6638D57164B65F22283A69CAB45184AB2134FD6F1B49F156D65FF585F13
4FA9B3AF368520131141317916CFE9A22C1190B5A8579101EB7F52E98150D490
9E075AC502DE5CA1E2D9682E705A334FAE18690373C562A1E141EF67871C9344
7B028F7EE092975BEA263419AD683FB71F1346512AFFF7F1A15248555514797A
1D5B97064FD342BA9F27A570206C2F90329DD298B0B5EC957EA52B12BD306B68
C18B01BB163F2501A752142131FA8A8D0FDD68D9F90CF4CA46D580F0FEFB5E5B
9E9B859EF780D31432AF4353F89AD0FE937CEF70FC61BAE53A5851794CFB75FB
282095B90D50B50A80EFC83DA520354F3582E53D03B343E05F117E62E01AD0F9
0CC9D1F2217F485F3971837E804873B4BC9391AC8045680C13FBD140EBEB5313
ECA0E4A58002B529C5EA970CD4E3F4E7FCB6EEFF8A28EC4E31BD8C34F5E48E80
A177BF19061DC3B7A5484579C8ADAE6E046190EF710AA5A07A30025B17CE39F6
A4D505CE39967D5E2A4CC2196ACBF85AF2E57498C2C2F75C9BC7B6525E0A65C0
3F24A67AC370500E906B16D39ECF29090417434BA3A5F66EB84505D4C82ED66D
D29C64ACD7D7BD7393DD9200C74A9D757450AD3FAFE5CE530FDCFCAE831662C8
8D1C6C7A9B5A5A6D2EFDD6FA433649F9CA0C8C78C8114DEAC4F8361F7F36DABA
5F80FDB3D086FD51CF08B8E6C4840E3D2CADC74EE789A711BCA4004B3C4FAF3D
45212651B2E38E76182B83D89EE6E2504D243E1C09A7F5317C12AA9917352713
C80964E1E285FCAF4E080C599E221E1F34420859156AE47952D9C0479ED6E77A
6D112C64A49F188E93D1D7F6E788FE80E84A132182340C6B7438ED6687985B64
CFEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E692F6C00B521F7AB2F32545952358F
0D39246DE215D0A7EE67F377E81F9E65B25658B7FD97FAF98C7EA9161530404B
62B9AB7A91C863095D5433BB06F9A29488DA84D58A1394AD7878BB27E3CF4AF1
BC29DC64F319758518AB652F9E8BCA586D3D2021CA860F84DC0A2F61A93B6B44
F08A7F7C5F36FEE9F5D450D19F72C09580DDE2B3747D8A1054981BAEF31D6C42
040D7D5F37DE6DE019849E7C7754DD27E9511F9A9AFA4FB727695444F739448F
3D2021
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278EA0678603F85C0F3013AEB1B2AADDB2337DBAC1B2
52B2B115732959E1FF6C9CA993DF3E7C73B00F4A6A6277A32F6D5D10F8D4EB81
47315E5BD5FBE88DA5B2CD9D71A8B51C803FEC7DE7BCFCB04D76C24CBE3E40E4
9FA463B5D955A864FB6C5A78DC38B8B50077EA5974E8A3ACAA54356EB2F96D30
2EF8913C6BB60B5A8EF988AE0EDF80660A26B4A346117DE5CEE30B3060CE054C
EADEFCD37AD00997C5E88265319829F6550A04FDA1431436001C6A1DF2C4B348
7D13A6AC685AFFE02A7BB929DE6B4B055C846272F1FBF482697185767C53F920
D76F9712F4CE272D0C2667372D163483ECDF77BA7CD12D8ECED28FEFB6FE7AED
268986B789FF758D29DA2A03176C992E035EA5A9E1CAA5E94B0856CE64E50BDF
59815F4192B4255870CD61C8CF7AA8DE567D174EC90945404C580D88FFC83E41
68467A22AE09E5C7F478ADCEDDDBC45190969E28179AE774047799C5B210BAAA
F8270E008F36BD2F492AAFE1C957383C991714D5A5640E7764337A4B818A46C9
8482D55FFC768FD0EFB91B78A79A2E9AB8D7418504BD5B876926FF34E1182516
250C0A2650DF5B0561A34A2F1605C8F6A83530E2A1C17F64D1667C2E46377630
FD5DA148C4CD08A8466E4A855CBD2A9E742C6F2E9D8A4CFC8364F3532072FCD5
E6F3D73574BD1C3CC6D8482BABD931F2E12F66986E0A7998FD4C503CDCF383EA
3B047C07E76889E53BCA179007810F224B876AC00503AB55A75407ED5812EBE5
1D48F5905B8F5A18743210743F07AEA641E8742916BEED796784450B371FC34B
6CBC89B84A768270D5974CEC3D754BECC757ADF22680DA2784F6A58697E9AA30
09EB6DE9A1AA4CD3DFAD66E75ED5EEDE8D79650C19E49A7AAE3189423D742154
012D9D5B99A3F3FA169113113FA697C26C5FB2040FAB89A2B56214FB1FD4484F
88676214E55AFF8966693391550B7C1533F302FDCCBB54D6220E18B7EBB94670
D08440078F31BE793E00C0C41F69AFEE00B82EEBE418794D1D2BE01D79875A51
E966B442C0010AC422FE6A5A1EE32810FF5A9DCD8DF6F08CCC4302C94DABFED1
4DBE2C66F5634215C2496472A5AB7CB1EB2B244D154800C37528B8480462D85F
2613ACB524C01F0C56D73C39B25E9A7BBA40C3C3A3F56CAD70C99250421C1B98
F38AE89F4A9CF191FFD1B22ABA2F6D81E12A2373A1F7EC29D0E317A163425FAD
3DA6B6C711C4EED06D726806E8535656D104E95CF52AADBDC982C3432AD40EC1
2A9D8CE63997F4E37E216C1C05F1FC27EE26EEE8A34615ECF6B4CC0422D64E5C
642A32CE0DB76AAD6A5C182C5833119FAD16B0949A74B78B133D8F096414A6A1
C3662CEFD1C1CAAE81FCD85877DA06EC2549E6DBF011711071776365299F05E2
35F07564CBE61928623ED12663FC5F67E54E1B1065B0A2FE12CFD1BCF65A4DDA
9BAABE63550980A2FB59A0F4D0BF1C581023F40A55B139CBDEC2E9835716096E
015FBCD2726BD9D16C33899BB662B4EF4CF3848DE62635835EB09C83AD5E9381
282D341353E4990BE3AB30CBC81356E0ECDEA3BA43887144D2FCF7677B00D5E2
AABB6614A1C6BEF1FEF7E859BF54B6BB0392FE6267053D32076C992508D5E36F
4CD2BDCFE5A1339430D77A423FCF025B6D7D4EAE02B721AF4AE9E5F06F4D1F55
58A446018981E2488DA073DFFCAF41434D279F68CE3225E8225B3B3002E43443
9957519B13E5E7D9C8D5E30DBDD1E9797E7B945443AEC24E44A6FDE3061DCDA7
D0A58310C010F20477092CF2935F81C766012BDEA33E98025A731944E358CA06
83FE334F0F8AD9A62B3AD827F8D717C344ACC4A9BA6BCBB258DC64E9FCEE5E4F
B2FFEF080C2C0A13998A8F6CC22FF741AD7B3D8F08595E8E90B887D1D894CCEC
6A92ACAB19BC02596D1AF946322CAC546E404CDFC36476882B65937DE0EE1D06
429ACB957AFB9723D08153450F1DD9F9D87CCE8BDFA072E3614993B018B60A19
3678087CEB8D3F8B0FB05BA2490518BA276E92F44796F0A104735B11F7059B78
55EA5A6590F4F5C4DD808DC9DA10340F82A8264938221E2D6315C7D46F5BF054
32C8EF890E550C0643F6FF06BFCFB26191598BC6EC1177C1C5317DAC50780DF2
7FFD7289EE5036BC24888FC7BBB39C1FC5B165AA08ED6DC20B5A20F883B1A6CE
8E67332C255A1F164338D69022009CA7F48D6285A5AEBBC11315DD36604CD202
B40074B826059F583878D08BF02B5A2656CB10A976C89D7E2B540D3F8B06C958
C8E4EE8AD6D605D0D74287B1B91448AA8EF82D517936EE9B55007DF6B13D414F
54205177E155792E155279D7BEA3A3159AE19F83CC53396C8F7D1C7DB80061C2
3A3DEC73814384B7D404C3E0E8CF56506282629B47B4798103183CB644D6A799
1E051A53A7FB49A345B817121A8F9E04090C71E43FAD46062CC152EF4FB08D50
6537F76DA98F91744D28E43551F5C2F306D841C0C3CD22CAC6440661C41DA13C
A5C793AD51A5D94E2FE475FDFF28791EBA55B584216E17625AEFF58CDF555BB5
FB3E593813687B6E6E0172521B4FDB409998110BAE0A129FBC804092CB1E91F5
C42CA2F63B1C69C264192F341CE1899F6640D4BE7C76FABAFF2CF4BFC525C0D0
8A9FD036198A3AF462FA279BF17E5F6101F47365330DD0538C6BCF2CAB755EC0
5B9DD9B97C25849E565486831C937CF2074730105B76C00E8724D723CE33DC20
951751D8AF1B4674663F4AAF0CD40AAA104F19CE2E99512DF95109ECBB02EC51
781AE409FD123C7E8B6413A2B7B5752B8AA12C052B7EA9AF11965043657F6799
9F802B79D7233469722F3240D9FADDECB0ABC868F84D1B9EC578860F2C0BD85E
453DD8368AE02FABA56EEBE811F699F4EC9825879C9CA24FBA368135557189C4
D403AD18120C549C34910861B70EC2D96D9A7910B07FEEFE5C94DB3D98574E45
7ADA79174EBB7C697A6DED988377CACBCF6230E8B704344C7DA4E1D12FB7AB9D
A35773DC75DB308B5B16058355A47E01B89D0C68AA8B824C92AD2F827EE688AB
96748B2CF6C360DFA89361FBB44A8FBA0C67BA1E03D5DAE7008F0C1C60CA3E35
B688B728B43943A75D914FECD32F1930BA5FC894331A580299C0DCC580E4111D
D5F7325708A61EC274D3D13300D2D75D394B4AC493C7EB94D65E44B9878662B2
10C4B71831A2527CA60AA6D9A01669BFF53885C9F30B7749A4963777599A5A7A
A401701282E240BA5119855EC6E17C553CFA1101E802504C1087F4D84A9F594F
4D4488FC9EC4F7B096E4259A23BC023678B4CC386EE5CF2BD6D47EB779FA11A5
0BFDB21AABB175009B132241FE80AB88FD37DB56F6467CDF373462EE82BF26F7
8127FF94F5D5EFF73DCE1FBD751FB3D5173AFB4A01E59A6B9C859046BD41672F
6CD106F202A0ED2FC1448D47A92843D42AB5D139EEC50BEFE2021B017B020379
CB569204BA6B718415F4EB03CD31658ECF24A53FCDC340052FB3C9EC58D17868
948EDFDED36A92C4E896C66984C3B6CB0E8DBB99FA648FF941DDFD4ED029EEA2
14619054A07AA0F485BA77D9EA183A54D05BBD128982AA73FC861F8DEDC380C8
20FBDD05FDD99D9CDFD6EB610E5490D02BB3D09655E1FEA3D984BF10388BB171
DFFAB67073530AE67D6F6BEC978D4FE8A9BC1429DDD24B6E3998329B5D872315
432EC0D76B109A38B2A0279BA2E28A88A3F13BCFB930FCC91F74E8829B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 52099151 39074365 2000 600 600 (talk.dvi)
@start /Fa 130[90 90 90 1[90 90 90 90 90 90 90 90 90
90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 1[90
1[90 1[90 1[90 1[90 2[90 90 90 1[90 90 1[90 3[90 90 90
2[90 90 1[90 3[90 90 1[90 11[90 1[90 1[90 90 90 90 3[90
90 90 33[{ TeXBase1Encoding ReEncodeFont }57 149.44 /NimbusMonL-Regu
rf /Fb 135[101 2[111 61 101 71 1[111 111 111 162 51 101
2[111 2[101 111 2[101 12[111 3[121 141 1[151 7[121 24[51
44[{ TeXBase1Encoding ReEncodeFont }21 181.818 /NimbusSanL-Bold
rf /Fc 87[61 46[91 91 131 91 101 51 91 61 101 101 101
101 151 40 91 40 40 101 101 51 101 101 91 101 101 8[121
172 121 131 111 121 131 1[121 141 131 151 101 121 91
51 131 141 111 121 131 131 121 121 185 4[51 51 7[101
1[101 51 51 61 51 2[61 61 40 5[51 33[{ TeXBase1Encoding ReEncodeFont }
62 181.818 /NimbusSanL-Regu rf /Fd 240[91 15[{}1 181.818
/CMSY10 rf /Fe 139[37 66 3[74 74 1[29 2[29 2[37 74 74
15[81 6[111 20[74 74 74 74 74 74 74 74 74 48[{
 TeXBase1Encoding ReEncodeFont }20 132.835 /NimbusSanL-Regu
rf /Ff 134[120 3[133 66 120 80 2[133 133 199 53 120 1[53
133 133 1[133 133 120 133 133 12[146 159 173 3[173 199
133 7[173 173 1[159 20[66 44[{ TeXBase1Encoding ReEncodeFont }28
239.103 /NimbusSanL-Regu rf /Fg 134[143 1[207 1[160 80
143 96 1[160 160 160 239 64 143 1[64 160 160 80 160 160
143 160 160 9[271 2[175 191 207 2[223 207 239 160 2[80
2[175 1[207 207 1[191 1[160 16[80 1[80 2[96 96 64 39[{
 TeXBase1Encoding ReEncodeFont }40 286.924 /NimbusSanL-Regu
rf /Fh 199[92 5[92 92 92 2[55 45[{ TeXBase1Encoding ReEncodeFont }5
166.044 /NimbusSanL-Regu rf /Fi 133[120 120 120 1[120
120 120 120 120 1[120 120 120 120 3[120 120 120 1[120
120 120 120 120 1[120 30[120 5[120 10[120 120 46[{
 TeXBase1Encoding ReEncodeFont }25 199.253 /NimbusMonL-Regu
rf /Fj 133[100 100 4[55 1[66 2[111 111 6[111 5[111 30[133
133 25[44 39[{ TeXBase1Encoding ReEncodeFont }11 199.253
/NimbusSanL-Regu rf /Fk 139[80 143 96 2[160 160 2[143
1[64 1[160 1[160 1[143 1[160 11[207 175 17[191 7[80 18[64
39[{ TeXBase1Encoding ReEncodeFont }16 286.924 /NimbusSanL-ReguItal
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Screen
/setpagedevice where
{ pop << /PageSize [594 792] >> setpagedevice }
if
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop 600 417 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with powerdot class)/Author ()/Keywords () /DOCINFO pdfmark
end
 600 417 a
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb Black
-600 4167 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -600 4167 a -600 4167 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -600 4167 a 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb -600 4167 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -600 4167 a -600
4167 a
SDict begin [/CropBox [0 0 594 842] /PAGES pdfmark end
 -600 4167 a -600 4167 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -600 4167 a -600 4167
a
SDict begin H.S end
 -600 4167 a -600 4167 a
SDict begin 13.6 H.A end
 -600 4167 a -600 4167 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -600
4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.2) cvn/View [/XYZ null null null]/Title
(Introduction) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.3) cvn/View [/XYZ null null null]/Title
(The Art of Testing) /OUT pdfmark end
 -600 4167
a -600 4167 a
SDict begin [/Count 1/Dest (slide.4) cvn/View [/XYZ null null null]/Title
(Not \(only\) Rails) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.5) cvn/View [/XYZ null null null]/Title
(One Method, One Purpose) /OUT pdfmark end
 -600 4167 a -600
4167 a
SDict begin [/Count 1/Dest (slide.6) cvn/View [/XYZ null null null]/Title
(One Test, One Assertion) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.7) cvn/View [/XYZ null null null]/Title
(Example) /OUT pdfmark end
 -600 4167 a -600 4167
a
SDict begin [/Count 0/Dest (slide.8) cvn/View [/XYZ null null null]/Title
(Mocking and Stubbing) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 1/Dest (slide.9) cvn/View [/XYZ null null null]/Title
(Testing Modules) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.10) cvn/View [/XYZ null null null]/Title
(Example) /OUT pdfmark end
 -600
4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.11) cvn/View [/XYZ null null null]/Title
(Testing IO) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.12) cvn/View [/XYZ null null null]/Title
(Well, Rails) /OUT pdfmark end
 -600 4167
a -600 4167 a
SDict begin [/Count 1/Dest (slide.13) cvn/View [/XYZ null null null]/Title
(Anonymous Controllers) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.14) cvn/View [/XYZ null null null]/Title
(Example) /OUT pdfmark end
 -600 4167 a -600
4167 a
SDict begin [/Count 0/Dest (slide.15) cvn/View [/XYZ null null null]/Title
(Testing Models?) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.16) cvn/View [/XYZ null null null]/Title
(Another Layer) /OUT pdfmark end
 -600 4167 a -600 4167
a
SDict begin [/Count 0/Dest (slide.17) cvn/View [/XYZ null null null]/Title
(TDD) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.18) cvn/View [/XYZ null null null]/Title
( Frameworks ) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.19) cvn/View [/XYZ null null null]/Title
( MiniTest or RSpec? ) /OUT pdfmark end
 -600
4167 a -600 4167 a
SDict begin [/Count 1/Dest (slide.20) cvn/View [/XYZ null null null]/Title
( That's all, folks. ) /OUT pdfmark end
 -600 4167 a -600 4167 a
SDict begin [/Count 0/Dest (slide.21) cvn/View [/XYZ null null null]/Title
(Thanks) /OUT pdfmark end
 -600 4167
a -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600 4167 a 183
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial -575 4822 a
SDict begin H.S end

-575 4822 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -575 4822 a
SDict begin H.R end
 -575 4822 a -575 4822 a
SDict begin [ /Subtype/Widget/F 4/T(pdstartclock)/FT/Tx/Q 0/BS<</W
1 /S /S>>/DA(/Helv 10 Tf 0 0 0 rg)/DV()/V()/AA<</F<</S/JavaScript/JS(function pdshowtime(){
var pdtime=new Date(); this.getField("pdclock.time").value= util.printd("HH:MM:ss",pdtime);
} pdshowtime(); var tempa=app.setInterval("pdshowtime()",1000); this.getField("pdstartclock").readonly=true;
this.getField("pdclock.time").readonly=true; )>>>> H.B /ANN pdfmark
end
 -575
4822 a 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934
-374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350
a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.1) cvn /DEST pdfmark end
 -600
4350 a 0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
1052 1340 a Fk(Bag)79 b(o')g(T)-34 b(r)t(ic)-6 b(ks:)99
b(Unit)79 b(T)-34 b(esting)p 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.94 TeXcolorrgb 1757 1971 a Fj(Anton)55 b('ton)m(y')g(Bang)n
(r)n(atz)967 2235 y
SDict begin H.S end
 967 2235 a 0.91 0.91 0.94 TeXcolorrgb
-32 x Fi(https://abangr)o(at)o(z.)o(git)o(hu)o(b.)o(co)o(m/)p
0.91 0.91 0.94 TeXcolorrgb 4434 2071 a
SDict begin H.R end
 4434 2071 a 4434
2203 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://abangratz.github.com/)>>/Subtype /Link H.B
/ANN pdfmark end
 4434 2203 a 2102 2467 a
SDict begin H.S end
 2102 2467 a 0.91 0.91 0.94
TeXcolorrgb -31 x Fi(@tony_xpro)p 0.91 0.91 0.94 TeXcolorrgb
3298 2313 a
SDict begin H.R end
 3298 2313 a 3298 2436 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(@tony_xpro)>>/Subtype /Link H.B /ANN pdfmark end
 3298 2436 a 787 2699
a
SDict begin H.S end
 787 2699 a 0.91 0.91 0.94 TeXcolorrgb -31 x Fi(anton.bangratz@)o(rad)
o(ar)o(se)o(rv)o(ice)o(s.)o(co)o(m)p 0.91 0.91 0.94 TeXcolorrgb
4613 2536 a
SDict begin H.R end
 4613 2536 a 4613 2668 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(anton.bangratz@radarservices.com)>>/Subtype /Link
H.B /ANN pdfmark end
 4613 2668 a 2275
3170 a Fh(2012-01-18)p 0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.2) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1950 1701 a Fg(Introduction)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(About)67 b(me)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray 4798 4177 a
Fe(note)37 b(1)f(of)h(slide)h(2)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray -138
291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
131 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Rub)l(y)51
b(De)-5 b(v)g(eloper)p 0 TeXcolorgray 1475 422 a
tx@Dict begin (0) BOL end
 1475
422 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138
648 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(XP)51
b(Enthusiast)p 0 TeXcolorgray 1327 648 a
tx@Dict begin (0) BOL end
 1327 648 a 0
TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138 874 a Fd(\017)p
0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Senior)g(De)-5
b(v)g(eloper)51 b(at)f(RadarSer)5 b(vices)p 0 TeXcolorgray
3030 874 a
tx@Dict begin (0) BOL end
 3030 874 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 1100 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(Almost)54 b(2)g(centur)s(ies)f(of)g(e)-5 b(xper)s(ience;)55
b(prog)n(r)n(amming)g(language)f(agnostic)m(,)135 1326
y(b)l(ut)c(lik)l(e)i(Rub)l(y)f(a)g(lot.)p 0 TeXcolorgray
1682 1326 a
tx@Dict begin (0) BOL end
 1682 1326 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 1551 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(T)-22 b(r)5 b(ying)51 b(to)f(con)l(vince)h(people)g(that)f
(automated)g(T)-22 b(esting)51 b(are)f(a)g(Good)h(Thing)135
1777 y(since)g(ear)s(ly)f(2000s)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.3) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1571 1701 a Fg(The)79 b(Ar)11 b(t)80 b(of)f(T)-34
b(esting)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(T)-29 b(esting)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray 4798 4177 a
Fe(note)37 b(1)f(of)h(slide)h(3)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray -138
291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
134 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(-)50
b(Ask)h(who)g(is)f(testing,)g(automates)m(,)g(does)h(TDD)-13
b(,)51 b(CI,)f(...)p 0 TeXcolorgray 4153 425 a
tx@Dict begin (0) BOL end
 4153 425
a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138 651
a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(T)-22
b(ell)51 b(about:)62 b(Unit)51 b(T)-22 b(esting,)51 b(Integ)n(r)n
(ation)f(testing)p 0 TeXcolorgray 3566 651 a
tx@Dict begin (0) BOL end
 3566 651
a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138 877
a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(T)-22
b(est)50 b(A)-5 b(utomation)51 b(and)g(CI/CD)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.4) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1720 1701 a Fg(Not)79 b(\(only\))f(Rails)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(Not)67 b(Rails)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray 4798 4177 a
Fe(note)37 b(1)f(of)h(slide)h(4)p 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray -138
291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
131 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Rub)l(y)51
b(is)g(more)g(than)f(Rails)p 0 TeXcolorgray 2112 422
a
tx@Dict begin (0) BOL end
 2112 422 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 648 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(T)-22 b(esting)51 b(should)g(be)g(done)g(an)m(yw)m(a)-5
b(ys)p 0 TeXcolorgray 2800 648 a
tx@Dict begin (0) BOL end
 2800 648 a 0 TeXcolorgray
0.39 0.39 0.48 TeXcolorrgb -138 874 a Fd(\017)p 0 TeXcolorgray
0 TeXcolorgray 182 w Fc(Challenges:)63 b(FS)l(,)51 b(IO)-7
b(,)50 b(visuals)p 0 TeXcolorgray 2379 874 a
tx@Dict begin (0) BOL end
 2379 874
a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138 1100
a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Can)h(use)f(RSpec)m
(,)h(MiniT)-22 b(est)p 0 TeXcolorgray 2222 1100 a
tx@Dict begin (0) BOL end
 2222
1100 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138
1326 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w
Fc(Examples)52 b(use)e(RSpec)p 0 TeXcolorgray 1923 1326
a
tx@Dict begin (0) BOL end
 1923 1326 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 1551 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(Rules:)p 0 TeXcolorgray -138 1554 a
tx@Dict begin (0) BOL end
 -138 1554 a
0 TeXcolorgray 0.65 0.71 0.84 TeXcolorrgb 135 1860 a
Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(One)h(Method,)f(One)h
(Pur)5 b(pose)p 0 TeXcolorgray 2636 1860 a
tx@Dict begin (0) BOL end
 2636 1860
a 0 TeXcolorgray 0.65 0.71 0.84 TeXcolorrgb 135 2086
a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(One)51
b(T)-22 b(est,)50 b(One)h(Asser)7 b(tion)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600
4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.5) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94 TeXcolorrgb -270 -254
a Fb(One)51 b(Method,)g(One)g(Purpose)p 0.91 0.91 0.87
TeXcolorrgb -270 277 a Fc(Consider)5 b(:)-270 379 y
SDict begin H.S end
 -270
379 a -270 379 a
SDict begin 13.6 H.A end
 -270 379 a -270 379 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-1) cvn /DEST pdfmark
end
 -270 379 a 1 TeXcolorgray
-326 449 7 57 v -326 399 57 7 v -270 399 5940 7 v 5670
399 57 7 v 5720 449 7 57 v -326 632 7 183 v 5720 632
V 5776 632 V -270 577 a
SDict begin H.S end
 -270 577 a -270 577 a
SDict begin 11 H.A end
 -270 577
a -270 577 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.1) cvn /DEST pdfmark
end
 -270 577 a 0 0 1 0 TeXcolorcmyk 90 w Fa(class)p
1 TeXcolorgray 88 w(TitanClass)p -326 814 7 183 v 5720
814 V 5776 814 V -270 760 a
SDict begin H.S end
 -270 760 a -270 760 a
SDict begin 11 H.A end
 -270
760 a -270 760 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.2) cvn /DEST pdfmark
end
 -270 760 a 269 w Fa(.)p -326 997 7 183
v 5720 997 V 5776 997 V -270 942 a
SDict begin H.S end
 -270 942 a -270 942
a
SDict begin 11 H.A end
 -270 942 a -270 942 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.3) cvn /DEST pdfmark
end
 -270 942 a 269 w Fa(.)p -326
1180 7 183 v 5720 1180 V 5776 1180 V -270 1125 a
SDict begin H.S end
 -270
1125 a -270 1125 a
SDict begin 11 H.A end
 -270 1125 a -270 1125 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.4) cvn /DEST pdfmark
end
 -270 1125
a 269 w Fa(.)p -326 1362 7 183 v 5720 1362 V 5776 1362
V -270 1308 a
SDict begin H.S end
 -270 1308 a -270 1308 a
SDict begin 11 H.A end
 -270 1308 a -270
1308 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.5) cvn /DEST pdfmark
end
 -270 1308 a 0 0 1 0 TeXcolorcmyk 269 w Fa(def)p
1 TeXcolorgray 89 w(doIt)n(\()806 1334 y(*)896 1308 y(args)n(\))p
-326 1545 7 183 v 5720 1545 V 5776 1545 V -270 1490 a
SDict begin H.S end

-270 1490 a -270 1490 a
SDict begin 11 H.A end
 -270 1490 a -270 1490 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.6) cvn /DEST pdfmark
end
 -270
1490 a 448 w Fa(args)o([:)o(external_sources)-5 b(].)o(each)p
0 0 1 0 TeXcolorcmyk 89 w(do)p 1 TeXcolorgray 89 w(|)o(source)n(|)p
-326 1728 7 183 v 5720 1728 V 5776 1728 V -270 1673 a
SDict begin H.S end

-270 1673 a -270 1673 a
SDict begin 11 H.A end
 -270 1673 a -270 1673 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.7) cvn /DEST pdfmark
end
 -270
1673 a 628 w Fa(args)n([:data_gatherers)g(])p 0 0 1 0
TeXcolorcmyk 89 w(do)p 1 TeXcolorgray 89 w(|gatherer)m(|)p
-326 1910 7 183 v 5720 1910 V 5776 1910 V -270 1856 a
SDict begin H.S end

-270 1856 a -270 1856 a
SDict begin 11 H.A end
 -270 1856 a -270 1856 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.8) cvn /DEST pdfmark
end
 -270
1856 a 807 w Fa(gatherer)m(.doIt)o(\()o(source)n(\))p
-326 2093 7 183 v 5720 2093 V 5776 2093 V -270 2038 a
SDict begin H.S end

-270 2038 a -270 2038 a
SDict begin 11 H.A end
 -270 2038 a -270 2038 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.9) cvn /DEST pdfmark
end
 -270
2038 a 0 0 1 0 TeXcolorcmyk 628 w Fa(end)p 1 TeXcolorgray
-326 2276 7 183 v 5720 2276 V 5776 2276 V -270 2221 a
SDict begin H.S end

-270 2221 a -270 2221 a
SDict begin 11 H.A end
 -270 2221 a -270 2221 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.10) cvn /DEST pdfmark
end
 -270
2221 a 0 0 1 0 TeXcolorcmyk 448 w Fa(end)p 1 TeXcolorgray
-326 2458 7 183 v 5720 2458 V 5776 2458 V -270 2404 a
SDict begin H.S end

-270 2404 a -270 2404 a
SDict begin 11 H.A end
 -270 2404 a -270 2404 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.11) cvn /DEST pdfmark
end
 -270
2404 a 448 w Fa(processed_data)85 b(=)90 b([])p -326
2641 7 183 v 5720 2641 V 5776 2641 V -270 2586 a
SDict begin H.S end
 -270
2586 a -270 2586 a
SDict begin 11 H.A end
 -270 2586 a -270 2586 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.12) cvn /DEST pdfmark
end
 -270 2586
a 448 w Fa(current_gatherers)-5 b(.)o(each)p 0 0 1 0
TeXcolorcmyk 89 w(do)p 1 TeXcolorgray 89 w(|)o(gatherer)n(|)p
-326 2824 7 183 v 5720 2824 V 5776 2824 V -270 2769 a
SDict begin H.S end

-270 2769 a -270 2769 a
SDict begin 11 H.A end
 -270 2769 a -270 2769 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.13) cvn /DEST pdfmark
end
 -270
2769 a 628 w Fa(processed_data)85 b(<<)k(process_data)l(\()o(gatherer)n
(\))p -326 3006 7 183 v 5720 3006 V 5776 3006 V -270
2951 a
SDict begin H.S end
 -270 2951 a -270 2951 a
SDict begin 11 H.A end
 -270 2951 a -270 2951
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.14) cvn /DEST pdfmark
end
 -270 2951 a 0 0 1 0 TeXcolorcmyk 448 w Fa(end)p 1 TeXcolorgray
-326 3189 7 183 v 5720 3189 V 5776 3189 V -270 3134 a
SDict begin H.S end

-270 3134 a -270 3134 a
SDict begin 11 H.A end
 -270 3134 a -270 3134 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.15) cvn /DEST pdfmark
end
 -270
3134 a 448 w Fa(reports)f(=)h({})p -326 3372 7 183 v
5720 3372 V 5776 3372 V -270 3317 a
SDict begin H.S end
 -270 3317 a -270
3317 a
SDict begin 11 H.A end
 -270 3317 a -270 3317 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.16) cvn /DEST pdfmark
end
 -270 3317 a 448 w Fa(processed_data)l(.)
o(each)p 0 0 1 0 TeXcolorcmyk 89 w(do)p 1 TeXcolorgray
89 w(|)o(data)o(|)p -326 3554 7 183 v 5720 3554 V 5776
3554 V -270 3499 a
SDict begin H.S end
 -270 3499 a -270 3499 a
SDict begin 11 H.A end
 -270 3499
a -270 3499 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.17) cvn /DEST pdfmark
end
 -270 3499 a 628 w Fa(reports)m([data)o(.)o(id])g(=)g
(Report)n(.new)o(\(data)n(\))p -326 3737 7 183 v 5720
3737 V 5776 3737 V -270 3682 a
SDict begin H.S end
 -270 3682 a -270 3682
a
SDict begin 11 H.A end
 -270 3682 a -270 3682 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.18) cvn /DEST pdfmark
end
 -270 3682 a 0 0 1 0 TeXcolorcmyk
448 w Fa(end)p 1 TeXcolorgray -326 3920 7 183 v 5720
3920 V 5776 3920 V -270 3865 a
SDict begin H.S end
 -270 3865 a -270 3865
a
SDict begin 11 H.A end
 -270 3865 a -270 3865 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.19) cvn /DEST pdfmark
end
 -270 3865 a 448 w Fa(ReportPrinter)l
(.print_all)m(\()o(reports)n(\))p -326 4102 7 183 v 5720
4102 V 5776 4102 V -270 4047 a
SDict begin H.S end
 -270 4047 a -270 4047
a
SDict begin 11 H.A end
 -270 4047 a -270 4047 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.20) cvn /DEST pdfmark
end
 -270 4047 a 0 0 1 0 TeXcolorcmyk
269 w Fa(end)p 1 TeXcolorgray -326 4285 7 183 v 5720
4285 V 5776 4285 V -270 4230 a
SDict begin H.S end
 -270 4230 a -270 4230
a
SDict begin 11 H.A end
 -270 4230 a -270 4230 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-1.21) cvn /DEST pdfmark
end
 -270 4230 a 0 0 1 0 TeXcolorcmyk
90 w Fa(end)p 1 TeXcolorgray -270 4398 5940 7 v 5670
4398 113 7 v 5776 4398 7 113 v -326 4341 7 57 v -326
4341 57 7 v -270 4341 5940 7 v 5670 4341 57 7 v 5720
4341 7 57 v 0.91 0.91 0.87 TeXcolorrgb 1 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb -270 4647 a Fc(This)51 b(is)g(a)g(contr)s
(iv)-5 b(ed)50 b(e)-5 b(xample)m(.)63 b(The)51 b(one)f(I)h(modelled)h
(that)e(from)g(is)h(w)n(orse)m(.)62 b(By)-270 4873 y(f)-5
b(ar)c(.)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a 0.91 0.91 0.94 TeXcolorrgb -270 -254 a Fb(One)51 b(Method,)g(One)g
(Purpose)p 0.91 0.91 0.87 TeXcolorrgb -270 274 a Fc(T)-22
b(est:)-270 376 y
SDict begin H.S end
 -270 376 a -270 376 a
SDict begin 13.6 H.A end
 -270 376 a -270
376 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-2) cvn /DEST pdfmark
end
 -270 376 a 1 TeXcolorgray -326 447 7 57 v -326
397 57 7 v -270 397 5940 7 v 5670 397 57 7 v 5720 447
7 57 v -326 629 7 183 v 5720 629 V 5776 629 V -270 574
a
SDict begin H.S end
 -270 574 a -270 574 a
SDict begin 11 H.A end
 -270 574 a -270 574 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.1) cvn /DEST pdfmark
end
 -270 574
a 90 w Fa(require)p 1 0.5 0 TeXcolorrgb 87 w(')p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb(spec_helper)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb -4 w(')p 1 TeXcolorgray -326 812 7 183 v
5720 812 V 5776 812 V -270 757 a
SDict begin H.S end
 -270 757 a -270 757
a
SDict begin 11 H.A end
 -270 757 a -270 757 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.2) cvn /DEST pdfmark
end
 -270 757 a -326 994 7 183 v 5720
994 V 5776 994 V -270 940 a
SDict begin H.S end
 -270 940 a -270 940 a
SDict begin 11 H.A end
 -270
940 a -270 940 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.3) cvn /DEST pdfmark
end
 -270 940 a 90 w Fa(describe)87 b(TitanClass)p
0 0 1 0 TeXcolorcmyk 86 w(do)p 1 TeXcolorgray -326 1177
7 183 v 5720 1177 V 5776 1177 V -270 1122 a
SDict begin H.S end
 -270 1122
a -270 1122 a
SDict begin 11 H.A end
 -270 1122 a -270 1122 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.4) cvn /DEST pdfmark
end
 -270 1122 a 269
w Fa(it)p 1 0.5 0 TeXcolorrgb 89 w(")p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb(should)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
903 1152 8 30 v 911 1152 60 8 v 970 1152 8 30 v 1 TeXcolorgray
1 0.5 0 TeXcolorrgb 87 w(do)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb 1172 1152 V 1180 1152 60 8 v 1239 1152 8
30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb 89 w(everything)p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb -3 w(")p 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk 89 w(do)p 1 TeXcolorgray -326 1360
7 183 v 5720 1360 V 5776 1360 V -270 1305 a
SDict begin H.S end
 -270 1305
a -270 1305 a
SDict begin 11 H.A end
 -270 1305 a -270 1305 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.5) cvn /DEST pdfmark
end
 -270 1305 a 448
w Fa(source)h(=)h(double)n(\(Source)n(\))p -326 1542
7 183 v 5720 1542 V 5776 1542 V -270 1488 a
SDict begin H.S end
 -270 1488
a -270 1488 a
SDict begin 11 H.A end
 -270 1488 a -270 1488 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.6) cvn /DEST pdfmark
end
 -270 1488 a 448
w Fa(gatherer)e(=)j(double)n(\()o(Gatherer)n(\))p -326
1725 7 183 v 5720 1725 V 5776 1725 V -270 1670 a
SDict begin H.S end
 -270
1670 a -270 1670 a
SDict begin 11 H.A end
 -270 1670 a -270 1670 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.7) cvn /DEST pdfmark
end
 -270 1670
a 448 w Fa(args)f(=)g({external_sources)-6 b(:)90 b([)o(source)n(],)p
-326 1908 7 183 v 5720 1908 V 5776 1908 V -270 1853 a
SDict begin H.S end

-270 1853 a -270 1853 a
SDict begin 11 H.A end
 -270 1853 a -270 1853 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.8) cvn /DEST pdfmark
end
 -270
1853 a 628 w Fa(data_gatherers)-5 b(:)89 b([gatherer)m(]})p
-326 2090 7 183 v 5720 2090 V 5776 2090 V -270 2036 a
SDict begin H.S end

-270 2036 a -270 2036 a
SDict begin 11 H.A end
 -270 2036 a -270 2036 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.9) cvn /DEST pdfmark
end
 -270
2036 a 448 w Fa(processed)e(=)i(double)n(\()p 1 0.5 0
TeXcolorrgb(")p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb(ProcessedData)p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb -5 w(")p 1 TeXcolorgray(\))p
-326 2273 7 183 v 5720 2273 V 5776 2273 V -270 2218 a
SDict begin H.S end

-270 2218 a -270 2218 a
SDict begin 11 H.A end
 -270 2218 a -270 2218 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.10) cvn /DEST pdfmark
end
 -270
2218 a 448 w Fa(subject)n(.should_receive)-5 b(\(process_data)l(\))p
-326 2456 7 183 v 5720 2456 V 5776 2456 V -270 2401 a
SDict begin H.S end

-270 2401 a -270 2401 a
SDict begin 11 H.A end
 -270 2401 a -270 2401 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.11) cvn /DEST pdfmark
end
 -270
2401 a 628 w Fa(.)o(with)o(\(gatherer)m(\).)o(and_return)m(\(processed)
m(\))p -326 2638 7 183 v 5720 2638 V 5776 2638 V -270
2584 a
SDict begin H.S end
 -270 2584 a -270 2584 a
SDict begin 11 H.A end
 -270 2584 a -270 2584
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.12) cvn /DEST pdfmark
end
 -270 2584 a 448 w Fa(report)88 b(=)h(double)n(\(Report)n(\))p
-326 2821 7 183 v 5720 2821 V 5776 2821 V -270 2766 a
SDict begin H.S end

-270 2766 a -270 2766 a
SDict begin 11 H.A end
 -270 2766 a -270 2766 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.13) cvn /DEST pdfmark
end
 -270
2766 a 448 w Fa(Report)n(.should_receive)-5 b(\(:new)o(\).)o(with)o(\()
o(processed)m(\).)p -326 3004 7 183 v 5720 3004 V 5776
3004 V -270 2949 a
SDict begin H.S end
 -270 2949 a -270 2949 a
SDict begin 11 H.A end
 -270 2949
a -270 2949 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.14) cvn /DEST pdfmark
end
 -270 2949 a 628 w Fa(and_return)l(\(report)n(\))p
-326 3186 7 183 v 5720 3186 V 5776 3186 V -270 3131 a
SDict begin H.S end

-270 3131 a -270 3131 a
SDict begin 11 H.A end
 -270 3131 a -270 3131 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.15) cvn /DEST pdfmark
end
 -270
3131 a 448 w Fa(ReportPrinter)l(.should_receive)g(\(:)o(print_all)m
(\).with)n(\([report)n(]\))p -326 3369 7 183 v 5720 3369
V 5776 3369 V -270 3314 a
SDict begin H.S end
 -270 3314 a -270 3314 a
SDict begin 11 H.A end
 -270
3314 a -270 3314 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.16) cvn /DEST pdfmark
end
 -270 3314 a 448 w Fa(subject)n(.doIt)n(\(args)o(\))p
-326 3552 7 183 v 5720 3552 V 5776 3552 V -270 3497 a
SDict begin H.S end

-270 3497 a -270 3497 a
SDict begin 11 H.A end
 -270 3497 a -270 3497 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.17) cvn /DEST pdfmark
end
 -270
3497 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray
-326 3734 7 183 v 5720 3734 V 5776 3734 V -270 3679 a
SDict begin H.S end

-270 3679 a -270 3679 a
SDict begin 11 H.A end
 -270 3679 a -270 3679 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-2.18) cvn /DEST pdfmark
end
 -270
3679 a 0 0 1 0 TeXcolorcmyk 90 w Fa(end)p 1 TeXcolorgray
-270 3847 5940 7 v 5670 3847 113 7 v 5776 3847 7 113
v -326 3791 7 57 v -326 3791 57 7 v -270 3791 5940 7
v 5670 3791 57 7 v 5720 3791 7 57 v 0.91 0.91 0.87 TeXcolorrgb
1 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 10 10
TeXDict begin @landscape 10 9 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a 0.91 0.91 0.94 TeXcolorrgb -270 -254 a Fb(One)51 b(Method,)g(One)g
(Purpose)p 0.91 0.91 0.87 TeXcolorrgb -270 274 a Fc(T)-22
b(est:)-270 376 y
SDict begin H.S end
 -270 376 a -270 376 a
SDict begin 13.6 H.A end
 -270 376 a -270
376 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-3) cvn /DEST pdfmark
end
 -270 376 a 1 TeXcolorgray -326 447 7 57 v -326
397 57 7 v -270 397 5940 7 v 5670 397 57 7 v 5720 447
7 57 v -326 629 7 183 v 5720 629 V 5776 629 V -270 574
a
SDict begin H.S end
 -270 574 a -270 574 a
SDict begin 11 H.A end
 -270 574 a -270 574 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.1) cvn /DEST pdfmark
end
 -270 574
a 90 w Fa(require)p 1 0.5 0 TeXcolorrgb 87 w(')p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb(spec_helper)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb -4 w(')p 1 TeXcolorgray -326 812 7 183 v
5720 812 V 5776 812 V -270 757 a
SDict begin H.S end
 -270 757 a -270 757
a
SDict begin 11 H.A end
 -270 757 a -270 757 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.2) cvn /DEST pdfmark
end
 -270 757 a -326 994 7 183 v 5720
994 V 5776 994 V -270 940 a
SDict begin H.S end
 -270 940 a -270 940 a
SDict begin 11 H.A end
 -270
940 a -270 940 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.3) cvn /DEST pdfmark
end
 -270 940 a 90 w Fa(describe)87 b(TitanClass)p
0 0 1 0 TeXcolorcmyk 86 w(do)p 1 TeXcolorgray -326 1177
7 183 v 5720 1177 V 5776 1177 V -270 1122 a
SDict begin H.S end
 -270 1122
a -270 1122 a
SDict begin 11 H.A end
 -270 1122 a -270 1122 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.4) cvn /DEST pdfmark
end
 -270 1122 a 269
w Fa(it)p 1 0.5 0 TeXcolorrgb 89 w(")p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb(should)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
903 1152 8 30 v 911 1152 60 8 v 970 1152 8 30 v 1 TeXcolorgray
1 0.5 0 TeXcolorrgb 87 w(do)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb 1172 1152 V 1180 1152 60 8 v 1239 1152 8
30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb 89 w(everything)p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb -3 w(")p 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk 89 w(do)p 1 TeXcolorgray -326 1360
7 183 v 5720 1360 V 5776 1360 V -270 1305 a
SDict begin H.S end
 -270 1305
a -270 1305 a
SDict begin 11 H.A end
 -270 1305 a -270 1305 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.5) cvn /DEST pdfmark
end
 -270 1305 a 448
w Fa(source)h(=)h(double)n(\(Source)n(\))p -326 1542
7 183 v 5720 1542 V 5776 1542 V -270 1488 a
SDict begin H.S end
 -270 1488
a -270 1488 a
SDict begin 11 H.A end
 -270 1488 a -270 1488 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.6) cvn /DEST pdfmark
end
 -270 1488 a 448
w Fa(gatherer)e(=)j(double)n(\()o(Gatherer)n(\))p -326
1725 7 183 v 5720 1725 V 5776 1725 V -270 1670 a
SDict begin H.S end
 -270
1670 a -270 1670 a
SDict begin 11 H.A end
 -270 1670 a -270 1670 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.7) cvn /DEST pdfmark
end
 -270 1670
a 448 w Fa(args)f(=)g({external_sources)-6 b(:)90 b([)o(source)n(],)p
-326 1908 7 183 v 5720 1908 V 5776 1908 V -270 1853 a
SDict begin H.S end

-270 1853 a -270 1853 a
SDict begin 11 H.A end
 -270 1853 a -270 1853 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.8) cvn /DEST pdfmark
end
 -270
1853 a 628 w Fa(data_gatherers)-5 b(:)89 b([gatherer)m(]})p
-326 2090 7 183 v 5720 2090 V 5776 2090 V -270 2036 a
SDict begin H.S end

-270 2036 a -270 2036 a
SDict begin 11 H.A end
 -270 2036 a -270 2036 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.9) cvn /DEST pdfmark
end
 -270
2036 a 448 w Fa(processed)e(=)i(double)n(\()p 1 0.5 0
TeXcolorrgb(")p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb(ProcessedData)p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb -5 w(")p 1 TeXcolorgray(\))p
-326 2273 7 183 v 5720 2273 V 5776 2273 V -270 2218 a
SDict begin H.S end

-270 2218 a -270 2218 a
SDict begin 11 H.A end
 -270 2218 a -270 2218 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.10) cvn /DEST pdfmark
end
 -270
2218 a 448 w Fa(subject)n(.should_receive)-5 b(\(process_data)l(\))p
-326 2456 7 183 v 5720 2456 V 5776 2456 V -270 2401 a
SDict begin H.S end

-270 2401 a -270 2401 a
SDict begin 11 H.A end
 -270 2401 a -270 2401 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.11) cvn /DEST pdfmark
end
 -270
2401 a 628 w Fa(.)o(with)o(\(gatherer)m(\).)o(and_return)m(\(processed)
m(\))p -326 2638 7 183 v 5720 2638 V 5776 2638 V -270
2584 a
SDict begin H.S end
 -270 2584 a -270 2584 a
SDict begin 11 H.A end
 -270 2584 a -270 2584
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.12) cvn /DEST pdfmark
end
 -270 2584 a 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
448 w Fa(#)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 90 w(Yikes)p 1 TeXcolorgray 0.5 TeXcolorgray
-2 w(,)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(a)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 90 w(stub)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(on)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(the)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(subject)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 87 w(under)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(test)p
1 TeXcolorgray 0.5 TeXcolorgray -1 w(!)p 1 TeXcolorgray
-326 2821 7 183 v 5720 2821 V 5776 2821 V -270 2766 a
SDict begin H.S end

-270 2766 a -270 2766 a
SDict begin 11 H.A end
 -270 2766 a -270 2766 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.13) cvn /DEST pdfmark
end
 -270
2766 a 448 w Fa(report)88 b(=)h(double)n(\(Report)n(\))p
-326 3004 7 183 v 5720 3004 V 5776 3004 V -270 2949 a
SDict begin H.S end

-270 2949 a -270 2949 a
SDict begin 11 H.A end
 -270 2949 a -270 2949 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.14) cvn /DEST pdfmark
end
 -270
2949 a 448 w Fa(Report)n(.should_receive)-5 b(\(:new)o(\).)o(with)o(\()
o(processed)m(\).)p -326 3186 7 183 v 5720 3186 V 5776
3186 V -270 3131 a
SDict begin H.S end
 -270 3131 a -270 3131 a
SDict begin 11 H.A end
 -270 3131
a -270 3131 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.15) cvn /DEST pdfmark
end
 -270 3131 a 628 w Fa(and_return)l(\(report)n(\))p
-326 3369 7 183 v 5720 3369 V 5776 3369 V -270 3314 a
SDict begin H.S end

-270 3314 a -270 3314 a
SDict begin 11 H.A end
 -270 3314 a -270 3314 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.16) cvn /DEST pdfmark
end
 -270
3314 a 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
448 w Fa(#)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 90 w(Stubbing)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 87 w(".)p 1 TeXcolorgray
0.5 TeXcolorgray -1 w(new)p 1 TeXcolorgray 0.5 TeXcolorgray
-1 w(")p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(is)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 89 w(rarely)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(a)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(good)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(idea)p 1 TeXcolorgray -326 3552
7 183 v 5720 3552 V 5776 3552 V -270 3497 a
SDict begin H.S end
 -270 3497
a -270 3497 a
SDict begin 11 H.A end
 -270 3497 a -270 3497 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.17) cvn /DEST pdfmark
end
 -270 3497 a 448
w Fa(ReportPrinter)l(.should_receive)g(\(:)o(print_all)m(\).with)n
(\([report)n(]\))p -326 3734 7 183 v 5720 3734 V 5776
3734 V -270 3679 a
SDict begin H.S end
 -270 3679 a -270 3679 a
SDict begin 11 H.A end
 -270 3679
a -270 3679 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.18) cvn /DEST pdfmark
end
 -270 3679 a 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 448 w Fa(#)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 90 w(Huh)p 1 TeXcolorgray
0.5 TeXcolorgray -1 w(.)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 89 w(We)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 89 w(know)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
88 w(that)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(a)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 89 w(ReportPrinter)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
85 w(prints)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 88 w(reports)p 1 TeXcolorgray 0.5 TeXcolorgray
-2 w(,)p 1 TeXcolorgray -326 3917 7 183 v 5720 3917 V
5776 3917 V -270 3862 a
SDict begin H.S end
 -270 3862 a -270 3862 a
SDict begin 11 H.A end
 -270
3862 a -270 3862 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.19) cvn /DEST pdfmark
end
 -270 3862 a 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 448 w Fa(#)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 90 w(but)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(that)p
1 TeXcolorgray 0.5 TeXcolorgray -1 w(')p 1 TeXcolorgray
0.5 TeXcolorgray(s)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 89 w(more)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(than)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(we)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(actually)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 87 w(should)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 87 w(know)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(...)p 1 TeXcolorgray -326 4100 7 183 v 5720 4100
V 5776 4100 V -270 4045 a
SDict begin H.S end
 -270 4045 a -270 4045 a
SDict begin 11 H.A end
 -270
4045 a -270 4045 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.20) cvn /DEST pdfmark
end
 -270 4045 a 448 w Fa(subject)n(.doIt)n(\(args)o(\))p
-326 4282 7 183 v 5720 4282 V 5776 4282 V -270 4227 a
SDict begin H.S end

-270 4227 a -270 4227 a
SDict begin 11 H.A end
 -270 4227 a -270 4227 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.21) cvn /DEST pdfmark
end
 -270
4227 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray
-326 4465 7 183 v 5720 4465 V 5776 4465 V -270 4410 a
SDict begin H.S end

-270 4410 a -270 4410 a
SDict begin 11 H.A end
 -270 4410 a -270 4410 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-3.22) cvn /DEST pdfmark
end
 -270
4410 a 0 0 1 0 TeXcolorcmyk 90 w Fa(end)p 1 TeXcolorgray
-270 4578 5940 7 v 5670 4578 113 7 v 5776 4578 7 113
v -326 4521 7 57 v -326 4521 57 7 v -270 4521 5940 7
v 5670 4521 57 7 v 5720 4521 7 57 v 0.91 0.91 0.87 TeXcolorrgb
1 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb -270 4825 a
Fc(Let')c(s)51 b(clean)g(up)f(this)h(mess)m(,)f(step)h(b)l(y)g(step)f
(...)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 11 11
TeXDict begin @landscape 11 10 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.6) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1133 1701 a Fg(One)79 b(T)-34 b(est,)79 b(One)g(Asser)11
b(tion)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 12 12
TeXDict begin @landscape 12 11 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600
4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.7) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94 TeXcolorrgb -270 -254
a Fb(Example)p 0.91 0.91 0.87 TeXcolorrgb -270 242 a
SDict begin H.S end

-270 242 a -270 242 a
SDict begin 13.6 H.A end
 -270 242 a -270 242 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-4) cvn /DEST pdfmark
end
 -270 242
a 1 TeXcolorgray -326 189 7 57 v -326 139 57 7 v -270
139 5940 7 v 5670 139 57 7 v 5720 189 7 57 v -326 372
7 183 v 5720 372 V 5776 372 V -270 317 a
SDict begin H.S end
 -270 317 a -270
317 a
SDict begin 11 H.A end
 -270 317 a -270 317 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.1) cvn /DEST pdfmark
end
 -270 317 a 90 w Fa(describe)87
b(SmartClass)p 0 0 1 0 TeXcolorcmyk 86 w(do)p 1 TeXcolorgray
-326 554 7 183 v 5720 554 V 5776 554 V -270 500 a
SDict begin H.S end
 -270
500 a -270 500 a
SDict begin 11 H.A end
 -270 500 a -270 500 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.2) cvn /DEST pdfmark
end
 -270 500 a 269
w Fa(it)p 1 0.5 0 TeXcolorrgb 89 w(")p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb(invokes)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb 993 529 8 30 v 1001 529 60 8 v 1060 529 8
30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb 87 w(the)p 1
TeXcolorgray 1 0.5 0 TeXcolorrgb 1351 529 V 1359 529
60 8 v 1419 529 8 30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
89 w(data)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb 1800 529
V 1808 529 60 8 v 1867 529 8 30 v 1 TeXcolorgray 1 0.5 0
TeXcolorrgb 88 w(gatherer)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
-3 w(")p 1 TeXcolorgray 0 0 1 0 TeXcolorcmyk 90 w(do)p
1 TeXcolorgray -326 737 7 183 v 5720 737 V 5776 737 V
-270 682 a
SDict begin H.S end
 -270 682 a -270 682 a
SDict begin 11 H.A end
 -270 682 a -270 682
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.3) cvn /DEST pdfmark
end
 -270 682 a 448 w Fa(data_gatherer)f(=)j(double)n(\(DataGatherer)l(\))
p -326 920 7 183 v 5720 920 V 5776 920 V -270 865 a
SDict begin H.S end
 -270
865 a -270 865 a
SDict begin 11 H.A end
 -270 865 a -270 865 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.4) cvn /DEST pdfmark
end
 -270 865 a 448
w Fa(source)f(=)h(double)n(\(Source)n(\))p -326 1102
7 183 v 5720 1102 V 5776 1102 V -270 1047 a
SDict begin H.S end
 -270 1047
a -270 1047 a
SDict begin 11 H.A end
 -270 1047 a -270 1047 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.5) cvn /DEST pdfmark
end
 -270 1047 a 448
w Fa(data_gatherer)l(.should_receive)-5 b(\(gather)n(\).)o(with)o(\()o
(source)n(\)\))p -326 1285 7 183 v 5720 1285 V 5776 1285
V -270 1230 a
SDict begin H.S end
 -270 1230 a -270 1230 a
SDict begin 11 H.A end
 -270 1230 a -270
1230 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.6) cvn /DEST pdfmark
end
 -270 1230 a 0.5 TeXcolorgray 1 TeXcolorgray 0.5
TeXcolorgray 448 w Fa(#)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 90 w(Our)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 88 w(only)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(assertion)p 1 TeXcolorgray 0.5 TeXcolorgray -3 w(!)p
1 TeXcolorgray -326 1468 7 183 v 5720 1468 V 5776 1468
V -270 1413 a
SDict begin H.S end
 -270 1413 a -270 1413 a
SDict begin 11 H.A end
 -270 1413 a -270
1413 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.7) cvn /DEST pdfmark
end
 -270 1413 a 448 w Fa(subject)n(.data_gatherer)85
b(=)k(data_gatherer)p 0.5 TeXcolorgray 86 w(#)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 89 w(DI)p
1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray
89 w(for)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(the)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 88 w(win)p 1 TeXcolorgray
-326 1650 7 183 v 5720 1650 V 5776 1650 V -270 1595 a
SDict begin H.S end

-270 1595 a -270 1595 a
SDict begin 11 H.A end
 -270 1595 a -270 1595 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.8) cvn /DEST pdfmark
end
 -270
1595 a 448 w Fa(subject)n(.gather_from_source)-6 b(\()o(source)n(\))p
-326 1833 7 183 v 5720 1833 V 5776 1833 V -270 1778 a
SDict begin H.S end

-270 1778 a -270 1778 a
SDict begin 11 H.A end
 -270 1778 a -270 1778 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.9) cvn /DEST pdfmark
end
 -270
1778 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray
0 0 1 0 TeXcolorcmyk 89 w(end)p 1 TeXcolorgray -326 2015
7 183 v 5720 2015 V 5776 2015 V -270 1961 a
SDict begin H.S end
 -270 1961
a -270 1961 a
SDict begin 11 H.A end
 -270 1961 a -270 1961 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.10) cvn /DEST pdfmark
end
 -270 1961 a 90
w Fa(...)p -326 2198 7 183 v 5720 2198 V 5776 2198 V
-270 2143 a
SDict begin H.S end
 -270 2143 a -270 2143 a
SDict begin 11 H.A end
 -270 2143 a -270
2143 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.11) cvn /DEST pdfmark
end
 -270 2143 a 0 0 1 0 TeXcolorcmyk 90 w Fa(class)p
1 TeXcolorgray 88 w(SmartClass)p -326 2381 7 183 v 5720
2381 V 5776 2381 V -270 2326 a
SDict begin H.S end
 -270 2326 a -270 2326
a
SDict begin 11 H.A end
 -270 2326 a -270 2326 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.12) cvn /DEST pdfmark
end
 -270 2326 a -326 2563 7 183
v 5720 2563 V 5776 2563 V -270 2509 a
SDict begin H.S end
 -270 2509 a -270
2509 a
SDict begin 11 H.A end
 -270 2509 a -270 2509 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.13) cvn /DEST pdfmark
end
 -270 2509 a 269 w Fa(attr_accessor)85
b(:data_gatherer)p -326 2746 7 183 v 5720 2746 V 5776
2746 V -270 2691 a
SDict begin H.S end
 -270 2691 a -270 2691 a
SDict begin 11 H.A end
 -270 2691
a -270 2691 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.14) cvn /DEST pdfmark
end
 -270 2691 a -326 2929 7 183 v 5720 2929
V 5776 2929 V -270 2874 a
SDict begin H.S end
 -270 2874 a -270 2874 a
SDict begin 11 H.A end
 -270
2874 a -270 2874 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.15) cvn /DEST pdfmark
end
 -270 2874 a 0 0 1 0 TeXcolorcmyk 269
w Fa(def)p 1 TeXcolorgray 89 w(gather_from_source)-6
b(\()o(source)n(\))p -326 3111 7 183 v 5720 3111 V 5776
3111 V -270 3057 a
SDict begin H.S end
 -270 3057 a -270 3057 a
SDict begin 11 H.A end
 -270 3057
a -270 3057 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.16) cvn /DEST pdfmark
end
 -270 3057 a 448 w Fa(data_gatherer_gather)g(\()o(source)n
(\))p -326 3294 7 183 v 5720 3294 V 5776 3294 V -270
3239 a
SDict begin H.S end
 -270 3239 a -270 3239 a
SDict begin 11 H.A end
 -270 3239 a -270 3239
a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.17) cvn /DEST pdfmark
end
 -270 3239 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray
-326 3477 7 183 v 5720 3477 V 5776 3477 V -270 3422 a
SDict begin H.S end

-270 3422 a -270 3422 a
SDict begin 11 H.A end
 -270 3422 a -270 3422 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-4.18) cvn /DEST pdfmark
end
 -270
3422 a 0 0 1 0 TeXcolorcmyk 90 w Fa(end)p 1 TeXcolorgray
-270 3590 5940 7 v 5670 3590 113 7 v 5776 3590 7 113
v -326 3533 7 57 v -326 3533 57 7 v -270 3533 5940 7
v 5670 3533 57 7 v 5720 3533 7 57 v 0.91 0.91 0.87 TeXcolorrgb
1 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 13 13
TeXDict begin @landscape 13 12 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.8) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1285 1701 a Fg(Moc)-6 b(king)79 b(and)g(Stub)m(bing)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 14 14
TeXDict begin @landscape 14 13 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(Moc)-5 b(king,)66 b(Stub)n(bing)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4798 4177 a Fe(note)37 b(1)f(of)h(slide)h(8)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray
-138 291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
131 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Moc)l(ks)51
b(are)f(not)h(stubs)p 0 TeXcolorgray 1809 422 a
tx@Dict begin (0) BOL end
 1809
422 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138
648 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Use)g(them)f
(instead)h(of)f(doing)i(e)-5 b(xpensiv)g(e)51 b(things)p
0 TeXcolorgray 3692 648 a
tx@Dict begin (0) BOL end
 3692 648 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 874 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(Use)g(whene)-5 b(v)g(er)50 b(not)h(ref)-5 b(err)s(ing)48
b(to)j(the)f(SUT)p 0 TeXcolorgray 3285 874 a
tx@Dict begin (0) BOL end
 3285 874
a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138 1100
a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(NEVER)i(use)e(when)h
(ref)-5 b(err)s(ing)49 b(to)h(the)h(SUT)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 15 15
TeXDict begin @landscape 15 14 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.9) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1665 1701 a Fg(T)-34 b(esting)78 b(Modules)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 16 16
TeXDict begin @landscape 16 15 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600
4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.10) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94 TeXcolorrgb -270 -254
a Fb(Example)p 0.91 0.91 0.87 TeXcolorrgb -270 242 a
SDict begin H.S end

-270 242 a -270 242 a
SDict begin 13.6 H.A end
 -270 242 a -270 242 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-5) cvn /DEST pdfmark
end
 -270 242
a 1 TeXcolorgray -326 189 7 57 v -326 139 57 7 v -270
139 5940 7 v 5670 139 57 7 v 5720 189 7 57 v -326 372
7 183 v 5720 372 V 5776 372 V -270 317 a
SDict begin H.S end
 -270 317 a -270
317 a
SDict begin 11 H.A end
 -270 317 a -270 317 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.1) cvn /DEST pdfmark
end
 -270 317 a 0 0 1 0 TeXcolorcmyk
90 w Fa(class)p 1 TeXcolorgray 88 w(TestSmartModule)p
-326 554 7 183 v 5720 554 V 5776 554 V -270 500 a
SDict begin H.S end
 -270
500 a -270 500 a
SDict begin 11 H.A end
 -270 500 a -270 500 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.2) cvn /DEST pdfmark
end
 -270 500 a 269
w Fa(include)87 b(SmartModule)p -326 737 7 183 v 5720
737 V 5776 737 V -270 682 a
SDict begin H.S end
 -270 682 a -270 682 a
SDict begin 11 H.A end
 -270
682 a -270 682 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.3) cvn /DEST pdfmark
end
 -270 682 a 0 0 1 0 TeXcolorcmyk 90 w
Fa(end)p 1 TeXcolorgray -326 920 7 183 v 5720 920 V 5776
920 V -270 865 a
SDict begin H.S end
 -270 865 a -270 865 a
SDict begin 11 H.A end
 -270 865 a -270
865 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.4) cvn /DEST pdfmark
end
 -270 865 a 90 w Fa(describe)g(SmartModule)p 0 0 1 0
TeXcolorcmyk 86 w(do)p 1 TeXcolorgray -326 1102 7 183
v 5720 1102 V 5776 1102 V -270 1047 a
SDict begin H.S end
 -270 1047 a -270
1047 a
SDict begin 11 H.A end
 -270 1047 a -270 1047 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.5) cvn /DEST pdfmark
end
 -270 1047 a 269 w Fa(subject)g({)j
(TestSmartModule)-5 b(.)o(new)89 b(})p -326 1285 7 183
v 5720 1285 V 5776 1285 V -270 1230 a
SDict begin H.S end
 -270 1230 a -270
1230 a
SDict begin 11 H.A end
 -270 1230 a -270 1230 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.6) cvn /DEST pdfmark
end
 -270 1230 a 269 w Fa(it)p
1 0.5 0 TeXcolorrgb 89 w(")p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb(does)p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb 724 1260 8 30 v 732
1260 60 8 v 791 1260 8 30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
88 w(something)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb -3
w(")p 1 TeXcolorgray 0 0 1 0 TeXcolorcmyk 89 w(do)p 1
TeXcolorgray -326 1468 7 183 v 5720 1468 V 5776 1468
V -270 1413 a
SDict begin H.S end
 -270 1413 a -270 1413 a
SDict begin 11 H.A end
 -270 1413 a -270
1413 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.7) cvn /DEST pdfmark
end
 -270 1413 a 448 w Fa(subject)n(.something)m(.)o(should)f(...)p
-326 1650 7 183 v 5720 1650 V 5776 1650 V -270 1595 a
SDict begin H.S end

-270 1595 a -270 1595 a
SDict begin 11 H.A end
 -270 1595 a -270 1595 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.8) cvn /DEST pdfmark
end
 -270
1595 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray
-326 1833 7 183 v 5720 1833 V 5776 1833 V -270 1778 a
SDict begin H.S end

-270 1778 a -270 1778 a
SDict begin 11 H.A end
 -270 1778 a -270 1778 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-5.9) cvn /DEST pdfmark
end
 -270
1778 a 0 0 1 0 TeXcolorcmyk 90 w Fa(end)p 1 TeXcolorgray
-270 1946 5940 7 v 5670 1946 113 7 v 5776 1946 7 113
v -326 1889 7 57 v -326 1889 57 7 v -270 1889 5940 7
v 5670 1889 57 7 v 5720 1889 7 57 v 0.91 0.91 0.87 TeXcolorrgb
1 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 17 17
TeXDict begin @landscape 17 16 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(T)-29 b(esting)67 b(Modules)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4724 4177 a Fe(note)37 b(1)g(of)f(slide)i(10)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray
-138 291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
131 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Easy:)62
b(mak)l(e)52 b(a)e(dumm)m(y)i(class)f(and)g(include)g(the)f(module)p
0 TeXcolorgray 4334 422 a
tx@Dict begin (0) BOL end
 4334 422 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 648 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(USE)h(subject!)p 0 TeXcolorgray 1248 648 a
tx@Dict begin (0) BOL end
 1248
648 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb -138
874 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(CA)-13
b(VEA)-22 b(T)l(:)68 b(don't)f(use)g('Dumm)m(yClass')i(e)-5
b(v)g(er)5 b(ywhere)67 b(-)f(there)g(will)i(be)e(con-)135
1100 y(stant)50 b(b)l(leeding)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 18 18
TeXDict begin @landscape 18 17 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.11) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 2055 1701 a Fg(T)-34 b(esting)79 b(IO)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 19 19
TeXDict begin @landscape 19 18 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(T)-29 b(esting)67 b(Modules)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4724 4177 a Fe(note)37 b(1)g(of)f(slide)i(11)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray
-138 291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
134 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Mention)51
b(Moc)l(kFS)l(,)h(F)-9 b(ak)l(eFS)p 0 TeXcolorgray 2267
425 a
tx@Dict begin (0) BOL end
 2267 425 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 651 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(Wr)n(apper)50 b(and/or)g(stub)n(bing)h(better)-9
b(.)p 0 TeXcolorgray 2751 651 a
tx@Dict begin (0) BOL end
 2751 651 a 0 TeXcolorgray
0.39 0.39 0.48 TeXcolorrgb -138 877 a Fd(\017)p 0 TeXcolorgray
0 TeXcolorgray 182 w Fc(DI)50 b(e)-5 b(v)g(en)51 b(better)-9
b(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 20 20
TeXDict begin @landscape 20 19 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.12) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 2027 1701 a Fg(W)-9 b(ell,)79 b(Rails)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb eop end
%%Page: 21 21
TeXDict begin @landscape 21 20 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.13) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1211 1701 a Fg(Anon)l(ymous)79 b(Controllers)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 22 22
TeXDict begin @landscape 22 21 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(Anon)l(ymous)66 b(Controllers)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4724 4177 a Fe(note)37 b(1)g(of)f(slide)i(13)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 424 a Fc(T)-22 b(est)50
b(functionality)h(f)-5 b(or)49 b(all)j(or)e(man)m(y)h(controllers)-138
650 y(that)f(has)h(been)f(added)h(via)g(inher)s(itance)g(\(e)m(.g.)61
b(ApplicationController\))p 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 23 23
TeXDict begin @landscape 23 22 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600
4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.14) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94 TeXcolorrgb -270 -254
a Fb(Example)p 0.91 0.91 0.87 TeXcolorrgb -270 242 a
SDict begin H.S end

-270 242 a -270 242 a
SDict begin 13.6 H.A end
 -270 242 a -270 242 a
SDict begin [/View [/XYZ H.V]/Dest (lstlisting.-6) cvn /DEST pdfmark
end
 -270 242
a 1 TeXcolorgray -326 189 7 57 v -326 139 57 7 v -270
139 5940 7 v 5670 139 57 7 v 5720 189 7 57 v -326 372
7 183 v 5720 372 V 5776 372 V -270 317 a
SDict begin H.S end
 -270 317 a -270
317 a
SDict begin 11 H.A end
 -270 317 a -270 317 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.1) cvn /DEST pdfmark
end
 -270 317 a 90 w Fa(describe)87
b(SomeClass)m(,)i(type)o(:)p 1 0.5 0 TeXcolorrgb 89 w(')p
1 TeXcolorgray 1 0.5 0 TeXcolorrgb(controller)p 1 TeXcolorgray
1 0.5 0 TeXcolorrgb -4 w(')p 1 TeXcolorgray 0 0 1 0 TeXcolorcmyk
90 w(do)p 1 TeXcolorgray -326 554 7 183 v 5720 554 V
5776 554 V -270 500 a
SDict begin H.S end
 -270 500 a -270 500 a
SDict begin 11 H.A end
 -270 500
a -270 500 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.2) cvn /DEST pdfmark
end
 -270 500 a 269 w Fa(controller)m(\()o
(ApplicationController)o(OrS)o(ubC)o(las)o(s)-6 b(\))p
0 0 1 0 TeXcolorcmyk 89 w(do)p 1 TeXcolorgray -326 737
7 183 v 5720 737 V 5776 737 V -270 682 a
SDict begin H.S end
 -270 682 a -270
682 a
SDict begin 11 H.A end
 -270 682 a -270 682 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.3) cvn /DEST pdfmark
end
 -270 682 a 0 0 1 0 TeXcolorcmyk
448 w Fa(def)p 1 TeXcolorgray 89 w(index)p -326 920 7
183 v 5720 920 V 5776 920 V -270 865 a
SDict begin H.S end
 -270 865 a -270
865 a
SDict begin 11 H.A end
 -270 865 a -270 865 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.4) cvn /DEST pdfmark
end
 -270 865 a 628 w Fa(...)p
0.5 TeXcolorgray 88 w(#)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 90 w(do)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 89 w(something)p
1 TeXcolorgray -326 1102 7 183 v 5720 1102 V 5776 1102
V -270 1047 a
SDict begin H.S end
 -270 1047 a -270 1047 a
SDict begin 11 H.A end
 -270 1047 a -270
1047 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.5) cvn /DEST pdfmark
end
 -270 1047 a 0 0 1 0 TeXcolorcmyk 448 w Fa(end)p
1 TeXcolorgray -326 1285 7 183 v 5720 1285 V 5776 1285
V -270 1230 a
SDict begin H.S end
 -270 1230 a -270 1230 a
SDict begin 11 H.A end
 -270 1230 a -270
1230 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.6) cvn /DEST pdfmark
end
 -270 1230 a 0 0 1 0 TeXcolorcmyk 269 w Fa(end)p
1 TeXcolorgray -326 1468 7 183 v 5720 1468 V 5776 1468
V -270 1413 a
SDict begin H.S end
 -270 1413 a -270 1413 a
SDict begin 11 H.A end
 -270 1413 a -270
1413 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.7) cvn /DEST pdfmark
end
 -270 1413 a -326 1650 7 183 v 5720 1650 V 5776
1650 V -270 1595 a
SDict begin H.S end
 -270 1595 a -270 1595 a
SDict begin 11 H.A end
 -270 1595
a -270 1595 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.8) cvn /DEST pdfmark
end
 -270 1595 a 269 w Fa(it)p 1 0.5 0 TeXcolorrgb
89 w(")p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb(makes)p 1
TeXcolorgray 1 0.5 0 TeXcolorrgb 814 1625 8 30 v 822
1625 60 8 v 881 1625 8 30 v 1 TeXcolorgray 1 0.5 0 TeXcolorrgb
88 w(something)p 1 TeXcolorgray 1 0.5 0 TeXcolorrgb 1710
1625 V 1718 1625 60 8 v 1777 1625 8 30 v 1 TeXcolorgray
1 0.5 0 TeXcolorrgb 86 w(happen)p 1 TeXcolorgray 1 0.5 0
TeXcolorrgb -2 w(")p 1 TeXcolorgray 0 0 1 0 TeXcolorcmyk
90 w(do)p 1 TeXcolorgray -326 1833 7 183 v 5720 1833
V 5776 1833 V -270 1778 a
SDict begin H.S end
 -270 1778 a -270 1778 a
SDict begin 11 H.A end
 -270
1778 a -270 1778 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.9) cvn /DEST pdfmark
end
 -270 1778 a 448 w Fa(...)p 0.5 TeXcolorgray
89 w(#)p 1 TeXcolorgray 0.5 TeXcolorgray 1 TeXcolorgray
0.5 TeXcolorgray 89 w(assert)p 1 TeXcolorgray 0.5 TeXcolorgray
1 TeXcolorgray 0.5 TeXcolorgray 88 w(something)p 1 TeXcolorgray
0.5 TeXcolorgray 1 TeXcolorgray 0.5 TeXcolorgray 87 w(happens)p
1 TeXcolorgray -326 2015 7 183 v 5720 2015 V 5776 2015
V -270 1961 a
SDict begin H.S end
 -270 1961 a -270 1961 a
SDict begin 11 H.A end
 -270 1961 a -270
1961 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.10) cvn /DEST pdfmark
end
 -270 1961 a 448 w Fa(get)89 b(:index)p -326 2198
7 183 v 5720 2198 V 5776 2198 V -270 2143 a
SDict begin H.S end
 -270 2143
a -270 2143 a
SDict begin 11 H.A end
 -270 2143 a -270 2143 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.11) cvn /DEST pdfmark
end
 -270 2143 a 0 0 1 0
TeXcolorcmyk 269 w Fa(end)p 1 TeXcolorgray -326 2381
7 183 v 5720 2381 V 5776 2381 V -270 2326 a
SDict begin H.S end
 -270 2326
a -270 2326 a
SDict begin 11 H.A end
 -270 2326 a -270 2326 a
SDict begin [/View [/XYZ H.V]/Dest (lstnumber.-6.12) cvn /DEST pdfmark
end
 -270 2326 a 0 0 1 0
TeXcolorcmyk 90 w Fa(end)p 1 TeXcolorgray -270 2494 5940
7 v 5670 2494 113 7 v 5776 2494 7 113 v -326 2437 7 57
v -326 2437 57 7 v -270 2437 5940 7 v 5670 2437 57 7
v 5720 2437 7 57 v 0.91 0.91 0.87 TeXcolorrgb 1 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 24 24
TeXDict begin @landscape 24 23 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.15) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1665 1701 a Fg(T)-34 b(esting)78 b(Models?)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 25 25
TeXDict begin @landscape 25 24 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(T)-29 b(esting)67 b(Models)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4724 4177 a Fe(note)37 b(1)g(of)f(slide)i(15)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray
-138 291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
162 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Mak)l(e)51
b(sure)f(that)g(y)l(ou)h(don't)g(use)g(Fixtures)f(or)g(Real)h(Database)
4624 387 y Fe(TM)4875 453 y Fc(access)p 0 TeXcolorgray
5491 453 a
tx@Dict begin (0) BOL end
 5491 453 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 679 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(Don't)74 b(test)e(f)-5 b(or)73 b(proper)7 b(ties/columns)m(,)79
b(ma)-5 b(ybe)74 b(v)-5 b(alidations)75 b(and)e(tr)n(ansf)-5
b(or-)135 905 y(mation)51 b(methods)m(,)p 0 TeXcolorgray
1527 905 a
tx@Dict begin (0) BOL end
 1527 905 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
-138 1130 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182
w Fc(b)l(ut)f(...)62 b(see)50 b(ne)-5 b(xt)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 26 26
TeXDict begin @landscape 26 25 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.16) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1806 1701 a Fg(Another)78 b(La)-9 b(y)j(er)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 27 27
TeXDict begin @landscape 27 26 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(Another)67 b(La)-7 b(y)i(er)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
4724 4177 a Fe(note)37 b(1)g(of)f(slide)i(16)p 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray -138 291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray
-138 291 a
tx@Dict begin (0) BOL end
 -138 291 a 0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb
134 x Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray 182 w Fc(Omakase)51
b(vs)m(.)63 b(Pr)s(ime)51 b(\(thanks)e(@ste)-5 b(v)g(eklabnik\))p
0 TeXcolorgray 3716 425 a
tx@Dict begin (0) BOL end
 3716 425 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 651 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(Dr)n(aper)c(,)50 b(Objects)h(On)g(Rails)m(,)g(...)p
0 TeXcolorgray 0 TeXcolorgray 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 28 28
TeXDict begin @landscape 28 27 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.17) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 2405 1701 a Fg(TDD)p 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.94 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
eop end
%%Page: 29 29
TeXDict begin @landscape 29 28 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
259.35748 0.0 259.35748    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.5 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 397.48499
23.84964 0.0 23.84964    /Lineto /lineto load def 0  setlinejoin false
Line  gsave 0.5 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a 0 TeXcolorgray
-336 -190 a Ff(TDD)p 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray 0.91 0.91 0.87
TeXcolorrgb 0 TeXcolorgray 4724 4177 a Fe(note)37 b(1)g(of)f(slide)i
(17)p 0.91 0.91 0.87 TeXcolorrgb 0 TeXcolorgray -138
291 a
tx@Dict begin (1) BOL end
 -138 291 a 0 TeXcolorgray -138 291 a
tx@Dict begin (0) BOL end
 -138 291 a
0 TeXcolorgray 0.39 0.39 0.48 TeXcolorrgb 131 x Fd(\017)p
0 TeXcolorgray 0 TeXcolorgray 182 w Fc(It')-9 b(s)50
b(hard.)p 0 TeXcolorgray 886 422 a
tx@Dict begin (0) BOL end
 886 422 a 0 TeXcolorgray
0.39 0.39 0.48 TeXcolorrgb -138 648 a Fd(\017)p 0 TeXcolorgray
0 TeXcolorgray 182 w Fc(It')-9 b(s)50 b(an)g(ar)7 b(t.)p
0 TeXcolorgray 994 648 a
tx@Dict begin (0) BOL end
 994 648 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 874 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(It')-9 b(s)50 b(an)g(acquired)h(taste)m(.)p
0 TeXcolorgray 1914 874 a
tx@Dict begin (0) BOL end
 1914 874 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 1100 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(Leads)g(to)f(better)f(design)i(decisions)p 0
TeXcolorgray 2793 1100 a
tx@Dict begin (0) BOL end
 2793 1100 a 0 TeXcolorgray 0.39 0.39 0.48
TeXcolorrgb -138 1326 a Fd(\017)p 0 TeXcolorgray 0 TeXcolorgray
182 w Fc(K)-7 b(eeps)51 b(co)m(v)-5 b(er)n(age)51 b(high)g(\(enough\))p
0 TeXcolorgray 2655 1326 a
tx@Dict begin (0) BOL end
 2655 1326 a 0 TeXcolorgray
0.39 0.39 0.48 TeXcolorrgb -138 1551 a Fd(\017)p 0 TeXcolorgray
0 TeXcolorgray 182 w Fc(Mak)l(es)g(sure)f(tests)g(are)g(f)-5
b(ast)p 0 TeXcolorgray 2207 1551 a
tx@Dict begin (0) BOL end
 2207 1551 a 0 TeXcolorgray
0.39 0.39 0.48 TeXcolorrgb -138 1777 a Fd(\017)p 0 TeXcolorgray
0 TeXcolorgray 182 w Fc(can)50 b(be)h(done)g(m)n(ulti-la)-5
b(y)l(ered)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 30 30
TeXDict begin @landscape 30 29 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.18) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1961 1701 a Fg(F)-13 b(r)m(ame)-6 b(w)m(or)t(ks)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 31 31
TeXDict begin @landscape 31 30 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.19) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1498 1701 a Fg(MiniT)-34 b(est)78 b(or)h(RSpec?)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 32 32
TeXDict begin @landscape 32 31 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
0.0 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517
-374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934 -600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934
-374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350 a -600 4350 a
SDict begin H.S end
 -600 4350
a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600 4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.20) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94
TeXcolorrgb 1765 1701 a Fg(That')-14 b(s)79 b(all,)f(f)-9
b(olks)l(.)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.94
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Page: 33 33
TeXDict begin @landscape 33 32 bop 0.91 0.91 0.87 TeXcolorrgb
600 417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 600 417 a 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb -600 4167 a
tx@Dict begin InitOL /TheOL (0) def end
 -600 4167 a -600 4167 a
tx@Dict begin (0) BOL end
 -600
4167 a 183 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.13 0.13 0.13  setrgbcolor   0. true 0.0 0.0 397.48499 265.32104
.5 Frame  gsave 0.13 0.13 0.13  setrgbcolor  1. .setopacityalpha  fill
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.39 0.39 0.48  setrgbcolor   0. true 0.0 298.11374 397.48499
265.32104 .5 Frame  gsave 0.39 0.39 0.48  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial 4517 -374 a
SDict begin H.S end
 4517 -374 a 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 5934 -600 a
SDict begin H.R end
 5934
-600 a 5934 -374 a
SDict begin [ /Subtype/Widget/F 4/T(pdclock.time)/FT/Tx/Q 2/BS<</W
1 /S /S>>/MK<</R 90>>/DA(/Helv 14 Tf .91 .91 .94 rg)/DV()/V() H.B /ANN
pdfmark end
 5934 -374 a -600 4350 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -600 4350
a -600 4350 a
SDict begin H.S end
 -600 4350 a -600 4350 a
SDict begin 13.6 H.A end
 -600 4350 a -600
4350 a
SDict begin [/View [/XYZ H.V]/Dest (slide.21) cvn /DEST pdfmark end
 -600 4350 a 0.91 0.91 0.94 TeXcolorrgb -270 -254
a Fb(Thanks)p 0.91 0.91 0.87 TeXcolorrgb -270 143 a
tx@Dict begin (1) BOL end
 -270
143 a 0.91 0.91 0.87 TeXcolorrgb -270 143 a
tx@Dict begin (0) BOL end
 -270 143
a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
134 x Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(Stephan)51 b(K)872 274 y(\250)852
277 y(amper)p 0.91 0.91 0.87 TeXcolorrgb 1418 277 a
tx@Dict begin (0) BOL end
 1418
277 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
-270 502 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(Lisa)g(Cr)s(ispin)p 0.91 0.91 0.87
TeXcolorrgb 1006 502 a
tx@Dict begin (0) BOL end
 1006 502 a 0.91 0.91 0.87 TeXcolorrgb
0.39 0.39 0.48 TeXcolorrgb -270 728 a Fd(\017)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Elisabeth)g(Hendr)s(ic)
l(ks)p 0.91 0.91 0.87 TeXcolorrgb 1659 728 a
tx@Dict begin (0) BOL end
 1659 728
a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
-270 954 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(Michael)h(Bolton)p 0.91 0.91 0.87
TeXcolorrgb 1246 954 a
tx@Dict begin (0) BOL end
 1246 954 a 0.91 0.91 0.87 TeXcolorrgb
0.39 0.39 0.48 TeXcolorrgb -270 1180 a Fd(\017)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 182 w Fc(A)-7
b(vdi)51 b(Gr)s(imm)p 0.91 0.91 0.87 TeXcolorrgb 998
1180 a
tx@Dict begin (0) BOL end
 998 1180 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48
TeXcolorrgb -270 1406 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Ste)-5 b(v)g(e)50
b(Klabnik)p 0.91 0.91 0.87 TeXcolorrgb 1155 1406 a
tx@Dict begin (0) BOL end
 1155
1406 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
-270 1631 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(Jerem)m(y)h(Ev)-5 b(ans)p 0.91 0.91 0.87
TeXcolorrgb 1198 1631 a
tx@Dict begin (0) BOL end
 1198 1631 a 0.91 0.91 0.87 TeXcolorrgb
0.39 0.39 0.48 TeXcolorrgb -270 1857 a Fd(\017)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Mar)7
b(tin)51 b(Gamsj)1110 1854 y(\250)1090 1857 y(ager)p
0.91 0.91 0.87 TeXcolorrgb 1505 1857 a
tx@Dict begin (0) BOL end
 1505 1857 a 0.91 0.91 0.87
TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb -270 2083 a Fd(\017)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
182 w Fc(Rober)7 b(t)50 b(C)-5 b(.)50 b(Mar)7 b(tin)51
b(\(Uncle)g(Bob\))p 0.91 0.91 0.87 TeXcolorrgb 2406 2083
a
tx@Dict begin (0) BOL end
 2406 2083 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48
TeXcolorrgb -270 2309 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb
0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Andreas)f(K)-7 b(opec)l(ky)p
0.91 0.91 0.87 TeXcolorrgb 1467 2309 a
tx@Dict begin (0) BOL end
 1467 2309 a 0.91 0.91 0.87
TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb -270 2535 a Fd(\017)p
0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb
182 w Fc(J)20 b(\250)-81 b(urgen)50 b(Strobel)p 0.91 0.91 0.87
TeXcolorrgb 1236 2535 a
tx@Dict begin (0) BOL end
 1236 2535 a 0.91 0.91 0.87 TeXcolorrgb
0.39 0.39 0.48 TeXcolorrgb -270 2761 a Fd(\017)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Andreas)g(Tief)-5
b(enthaler)p 0.91 0.91 0.87 TeXcolorrgb 1735 2761 a
tx@Dict begin (0) BOL end
 1735
2761 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
-270 2986 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(Michael)52 b(K)-7 b(ohl)p 0.91 0.91 0.87
TeXcolorrgb 1087 2986 a
tx@Dict begin (0) BOL end
 1087 2986 a 0.91 0.91 0.87 TeXcolorrgb
0.39 0.39 0.48 TeXcolorrgb -270 3212 a Fd(\017)p 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 182 w Fc(Floor)51
b(Drees)p 0.91 0.91 0.87 TeXcolorrgb 1003 3212 a
tx@Dict begin (0) BOL end
 1003
3212 a 0.91 0.91 0.87 TeXcolorrgb 0.39 0.39 0.48 TeXcolorrgb
-270 3438 a Fd(\017)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 182 w Fc(F)-8 b(r)s(iends)50 b(and)h(colleagues)g(that)f
(inspired)h(me)p 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb 0.91 0.91 0.87
TeXcolorrgb 0.91 0.91 0.87 TeXcolorrgb eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
